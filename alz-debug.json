{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "languageVersion": "2.0",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "1017972209708275621"
    },
    "name": "ALZ Bicep - Default Policy Assignments",
    "description": "Assigns ALZ Default Policies to the Management Group hierarchy"
  },
  "definitions": {
    "typManagementGroupIdOverrides": {
      "type": "object",
      "properties": {
        "intRoot": {
          "type": "string",
          "nullable": true
        },
        "platform": {
          "type": "string",
          "nullable": true
        },
        "platformManagement": {
          "type": "string",
          "nullable": true
        },
        "platformConnectivity": {
          "type": "string",
          "nullable": true
        },
        "platformIdentity": {
          "type": "string",
          "nullable": true
        },
        "landingZones": {
          "type": "string",
          "nullable": true
        },
        "landingZonesCorp": {
          "type": "string",
          "nullable": true
        },
        "landingZonesOnline": {
          "type": "string",
          "nullable": true
        },
        "landingZonesConfidentialCorp": {
          "type": "string",
          "nullable": true
        },
        "landingZonesConfidentialOnline": {
          "type": "string",
          "nullable": true
        },
        "decommissioned": {
          "type": "string",
          "nullable": true
        },
        "sandbox": {
          "type": "string",
          "nullable": true
        }
      }
    }
  },
  "parameters": {
    "parTopLevelManagementGroupPrefix": {
      "type": "string",
      "defaultValue": "Lee",
      "minLength": 2,
      "maxLength": 10,
      "metadata": {
        "description": "Prefix for management group hierarchy."
      }
    },
    "parLandingZoneChildrenMgAlzDefaultsEnable": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Assign policies to Corp & Online Management Groups under Landing Zones."
      }
    },
    "parLandingZoneMgConfidentialEnable": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Assign policies to Confidential Corp and Online groups under Landing Zones."
      }
    },
    "parLogAnalyticsWorkSpaceAndAutomationAccountLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Location of Log Analytics Workspace & Automation Account."
      }
    },
    "parLogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of Log Analytics Workspace."
      }
    },
    "parLogAnalyticsWorkspaceResourceCategory": {
      "type": "string",
      "defaultValue": "allLogs",
      "metadata": {
        "description": "Category of logs for supported resource logging for Log Analytics Workspace."
      }
    },
    "parDataCollectionRuleVMInsightsResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID for VM Insights Data Collection Rule."
      }
    },
    "parDataCollectionRuleChangeTrackingResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID for Change Tracking Data Collection Rule."
      }
    },
    "parDataCollectionRuleMDFCSQLResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID for MDFC SQL Data Collection Rule."
      }
    },
    "parUserAssignedManagedIdentityResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID for User Assigned Managed Identity."
      }
    },
    "parLogAnalyticsWorkspaceLogRetentionInDays": {
      "type": "string",
      "defaultValue": "365",
      "metadata": {
        "description": "Number of days to retain logs in Log Analytics Workspace."
      }
    },
    "parAutomationAccountName": {
      "type": "string",
      "defaultValue": "lee-automation-account",
      "metadata": {
        "description": "Name of the Automation Account."
      }
    },
    "parMsDefenderForCloudEmailSecurityContact": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Email address for Microsoft Defender for Cloud alerts."
      }
    },
    "parDdosEnabled": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable/disable DDoS Network Protection."
      }
    },
    "parDdosProtectionPlanId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the DDoS Protection Plan for Virtual Networks."
      }
    },
    "parPrivateDnsResourceGroupId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Resource ID of the Resource Group for Private DNS Zones. Empty to skip assigning the Deploy-Private-DNS-Zones policy."
      }
    },
    "parPrivateDnsZonesLocation": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Location of Private DNS Zones."
      }
    },
    "parPrivateDnsZonesNamesToAuditInCorp": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "List of Private DNS Zones to audit under the Corp Management Group. This overwrites default values."
      }
    },
    "parPolicyAssignmentsToDisableEnforcement": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Set the enforcement mode to DoNotEnforce for specific default ALZ policies."
      }
    },
    "parDisableAlzDefaultPolicies": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Set the enforcement mode to DoNotEnforce for all default ALZ policies."
      }
    },
    "parVmBackupExclusionTagName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Tag name for excluding VMs from this policy scope."
      }
    },
    "parVmBackupExclusionTagValue": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Tag value for excluding VMs from this policy scope."
      }
    },
    "parExcludedPolicyAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Names of policy assignments to exclude from the deployment entirely."
      }
    },
    "parTelemetryOptOut": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Opt out of deployment telemetry."
      }
    },
    "parManagementGroupIdOverrides": {
      "$ref": "#/definitions/typManagementGroupIdOverrides",
      "nullable": true,
      "metadata": {
        "description": "Specify the ALZ Default Management Group IDs to override as specified in `varManagementGroupIds`. Useful for scenarios when renaming ALZ default management groups names and IDs but not their intent or hierarchy structure."
      }
    }
  },
  "variables": {
    "$fxv#0": {
      "name": "Audit-AppGW-WAF",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Assign the WAF should be enabled for Application Gateway audit policy.",
        "displayName": "Web Application Firewall (WAF) should be enabled for Application Gateway",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Audit"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#1": {
      "name": "Audit-PeDnsZones",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Audits the deployment of Private Link Private DNS Zone resources in the Corp landing zone.",
        "displayName": "Audit Private Link Private DNS Zone resources",
        "notScopes": [],
        "parameters": {
          "privateLinkDnsZones": {
            "value": [
              "privatelink.adf.azure.com",
              "privatelink.afs.azure.net",
              "privatelink.agentsvc.azure-automation.net",
              "privatelink.analysis.windows.net",
              "privatelink.api.azureml.ms",
              "privatelink.azconfig.io",
              "privatelink.azure-api.net",
              "privatelink.azure-automation.net",
              "privatelink.azurecr.io",
              "privatelink.azure-devices.net",
              "privatelink.azure-devices-provisioning.net",
              "privatelink.azuredatabricks.net",
              "privatelink.azurehdinsight.net",
              "privatelink.azurehealthcareapis.com",
              "privatelink.azurestaticapps.net",
              "privatelink.azuresynapse.net",
              "privatelink.azurewebsites.net",
              "privatelink.batch.azure.com",
              "privatelink.blob.core.windows.net",
              "privatelink.cassandra.cosmos.azure.com",
              "privatelink.cognitiveservices.azure.com",
              "privatelink.database.windows.net",
              "privatelink.datafactory.azure.net",
              "privatelink.dev.azuresynapse.net",
              "privatelink.dfs.core.windows.net",
              "privatelink.dicom.azurehealthcareapis.com",
              "privatelink.digitaltwins.azure.net",
              "privatelink.directline.botframework.com",
              "privatelink.documents.azure.com",
              "privatelink.eventgrid.azure.net",
              "privatelink.file.core.windows.net",
              "privatelink.gremlin.cosmos.azure.com",
              "privatelink.guestconfiguration.azure.com",
              "privatelink.his.arc.azure.com",
              "privatelink.dp.kubernetesconfiguration.azure.com",
              "privatelink.managedhsm.azure.net",
              "privatelink.mariadb.database.azure.com",
              "privatelink.media.azure.net",
              "privatelink.mongo.cosmos.azure.com",
              "privatelink.monitor.azure.com",
              "privatelink.mysql.database.azure.com",
              "privatelink.notebooks.azure.net",
              "privatelink.ods.opinsights.azure.com",
              "privatelink.oms.opinsights.azure.com",
              "privatelink.pbidedicated.windows.net",
              "privatelink.postgres.database.azure.com",
              "privatelink.prod.migration.windowsazure.com",
              "privatelink.purview.azure.com",
              "privatelink.purviewstudio.azure.com",
              "privatelink.queue.core.windows.net",
              "privatelink.redis.cache.windows.net",
              "privatelink.redisenterprise.cache.azure.net",
              "privatelink.search.windows.net",
              "privatelink.service.signalr.net",
              "privatelink.servicebus.windows.net",
              "privatelink.siterecovery.windowsazure.com",
              "privatelink.sql.azuresynapse.net",
              "privatelink.table.core.windows.net",
              "privatelink.table.cosmos.azure.com",
              "privatelink.tip1.powerquery.microsoft.com",
              "privatelink.token.botframework.com",
              "privatelink.vaultcore.azure.net",
              "privatelink.web.core.windows.net",
              "privatelink.webpubsub.azure.com"
            ]
          },
          "effect": {
            "value": "Audit"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policyDefinitions/Audit-PrivateLinkDnsZones",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#10": {
      "name": "Deny-MgmtPorts-Internet",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy denies any network security rule that allows management port access from the Internet",
        "displayName": "Management port access from the Internet should be blocked",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Deny"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#11": {
      "name": "Deny-Priv-Containers-AKS",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Do not allow privileged containers creation in a Kubernetes cluster. This recommendation is part of CIS 5.2.1 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
        "displayName": "Kubernetes cluster should not allow privileged containers",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
        "definitionVersion": "9.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#12": {
      "name": "Deny-Priv-Escalation-AKS",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Do not allow containers to run with privilege escalation to root in a Kubernetes cluster. This recommendation is part of CIS 5.2.5 which is intended to improve the security of your Kubernetes environments. This policy is generally available for Kubernetes Service (AKS), and preview for AKS Engine and Azure Arc enabled Kubernetes. For more information, see https://aka.ms/kubepolicydoc.",
        "displayName": "Kubernetes clusters should not allow container privilege escalation",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
        "definitionVersion": "7.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#13": {
      "name": "Deny-Public-Endpoints",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy initiative is a group of policies that prevents creation of Azure PaaS services with exposed public endpoints.",
        "displayName": "Public network access should be disabled for PaaS services",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#14": {
      "name": "Deny-Public-IP-On-NIC",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy denies network interfaces from having a public IP associated to it under the assigned scope.",
        "displayName": "Deny network interfaces having a public IP associated",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a86a26-fd1f-447c-b59d-e51f44264114",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#15": {
      "name": "Deny-Public-IP",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy denies creation of Public IPs under the assigned scope.",
        "displayName": "Deny the creation of public IP",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Deny"
          },
          "listOfResourceTypesNotAllowed": {
            "value": [
              "Microsoft.Network/publicIPAddresses"
            ]
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#16": {
      "name": "Enable-AUM-CheckUpdates",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Configure auto-assessment (every 24 hours) for OS updates. You can control the scope of assignment according to machine subscription, resource group, location or tag. Learn more about this for Windows: https://aka.ms/computevm-windowspatchassessmentmode, for Linux: https://aka.ms/computevm-linuxpatchassessmentmode.",
        "displayName": "Configure periodic checking for missing system updates on azure virtual machines and Arc-enabled virtual machines.",
        "notScopes": [],
        "parameters": {
          "assessmentMode": {
            "value": "AutomaticByPlatform"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-AUM-CheckUpdates",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#17": {
      "name": "Deny-Storage-http",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Audit requirement of Secure transfer in your storage account. Secure transfer is an option that forces your storage account to accept requests only from secure connections (HTTPS). Use of HTTPS ensures authentication between the server and the service and protects data in transit from network layer attacks such as man-in-the-middle, eavesdropping, and session-hijacking.",
        "displayName": "Secure transfer to storage accounts should be enabled",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#18": {
      "name": "Deny-Subnet-Without-Nsg",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy denies the creation of a subnet without a Network Security Group to protect traffic across subnets.",
        "displayName": "Subnets should have a Network Security Group",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Deny"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#19": {
      "name": "Deny-UnmanagedDisk",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Deny virtual machines that do not use managed disk. It checks the managed disk property on virtual machine OS Disk fields.",
        "displayName": "Deny virtual machines and virtual machine scale sets that do not use managed disk",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default",
        "overrides": [
          {
            "kind": "policyEffect",
            "value": "Deny"
          }
        ]
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#2": {
      "name": "Audit-Location-Match",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Audit resource location matches resource group location",
        "displayName": "Audit that the resource location matches its resource group location",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#20": {
      "name": "Deploy-ASC-Monitoring",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Monitoring in Microsoft Defender for Cloud.",
        "displayName": "Enable Monitoring in Microsoft Defender for Cloud",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
        "definitionVersion": "57.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#21": {
      "name": "Deploy-AzActivity-Log",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Ensures that Activity Log Diagnostics settings are set to push logs into Log Analytics workspace.",
        "displayName": "Deploy Diagnostic Settings for Activity Log to Log Analytics workspace",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "DeployIfNotExists"
          },
          "logAnalytics": {
            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/${parTopLevelManagementGroupPrefix}-mgmt/providers/Microsoft.OperationalInsights/workspaces/${parTopLevelManagementGroupPrefix}-la"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#22": {
      "name": "Deploy-AzSqlDb-Auditing",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "To ensure the operations performed against your SQL assets are captured, SQL servers should have auditing enabled. If auditing is not enabled, this policy will configure auditing events to flow to the specified Log Analytics workspace.",
        "displayName": "Configure SQL servers to have auditing enabled to Log Analytics workspace",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "DeployIfNotExists"
          },
          "logAnalyticsWorkspaceId": {
            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/${parTopLevelManagementGroupPrefix}-mgmt/providers/Microsoft.OperationalInsights/workspaces/${parTopLevelManagementGroupPrefix}-la"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/25da7dfb-0666-4a15-a8f5-402127efd8bb",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#23": {
      "name": "Deploy-Log-Analytics",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Deploy-Log-Analytics.",
        "displayName": "Deploy-Log-Analytics",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "DeployIfNotExists"
          },
          "workspaceName": {
            "value": "${parTopLevelManagementGroupPrefix}-la"
          },
          "automationAccountName": {
            "value": "${parTopLevelManagementGroupPrefix}-automation"
          },
          "workspaceRegion": {
            "value": "${parDefaultRegion}"
          },
          "automationRegion": {
            "value": "${parDefaultRegion}"
          },
          "dataRetention": {
            "value": "30"
          },
          "sku": {
            "value": "pergb2018"
          },
          "rgName": {
            "value": "${parTopLevelManagementGroupPrefix}-mgmt"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "DoNotEnforce"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#24": {
      "name": "Deploy-MDEndpoints",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Deploy Microsoft Defender for Endpoint agent on applicable images.",
        "displayName": "[Preview]: Deploy Microsoft Defender for Endpoint agent",
        "notScopes": [],
        "parameters": {
          "microsoftDefenderForEndpointWindowsVmAgentDeployEffect": {
            "value": "DeployIfNotExists"
          },
          "microsoftDefenderForEndpointLinuxVmAgentDeployEffect": {
            "value": "DeployIfNotExists"
          },
          "microsoftDefenderForEndpointWindowsArcAgentDeployEffect": {
            "value": "DeployIfNotExists"
          },
          "microsoftDefenderForEndpointLinuxArcAgentDeployEffect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e20d08c5-6d64-656d-6465-ce9e37fd0ebc",
        "definitionVersion": "1.*.*-preview",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#25": {
      "name": "Deploy-MDEndpointsAMA",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Configure the multiple Microsoft Defender for Endpoint integration settings with Microsoft Defender for Cloud (WDATP, WDATP_EXCLUDE_LINUX_PUBLIC_PREVIEW, WDATP_UNIFIED_SOLUTION etc.). See: https://learn.microsoft.com/azure/defender-for-cloud/integration-defender-for-endpoint for more information.",
        "displayName": "Configure multiple Microsoft Defender for Endpoint integration settings with Microsoft Defender for Cloud",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/77b391e3-2d5d-40c3-83bf-65c846b3c6a3",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#26": {
      "name": "Deploy-MDFC-Config-H224",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Deploy Microsoft Defender for Cloud configuration and Security Contacts",
        "displayName": "Deploy Microsoft Defender for Cloud configuration",
        "notScopes": [],
        "parameters": {
          "emailSecurityContact": {
            "value": ""
          },
          "logAnalytics": {
            "value": "law-alz"
          },
          "ascExportResourceGroupName": {
            "value": "asc-export-alz"
          },
          "ascExportResourceGroupLocation": {
            "value": "northeurope"
          },
          "enableAscForServers": {
            "value": "DeployIfNotExists"
          },
          "enableAscForServersVulnerabilityAssessments": {
            "value": "DeployIfNotExists"
          },
          "enableAscForSql": {
            "value": "DeployIfNotExists"
          },
          "enableAscForAppServices": {
            "value": "DeployIfNotExists"
          },
          "enableAscForStorage": {
            "value": "DeployIfNotExists"
          },
          "enableAscForContainers": {
            "value": "DeployIfNotExists"
          },
          "enableAscForKeyVault": {
            "value": "DeployIfNotExists"
          },
          "enableAscForSqlOnVm": {
            "value": "DeployIfNotExists"
          },
          "enableAscForArm": {
            "value": "DeployIfNotExists"
          },
          "enableAscForOssDb": {
            "value": "DeployIfNotExists"
          },
          "enableAscForCosmosDbs": {
            "value": "DeployIfNotExists"
          },
          "enableAscForCspm": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config_20240319",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#27": {
      "name": "Deploy-MDFC-OssDb",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Advanced Threat Protection on your non-Basic tier open-source relational databases to detect anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases. See https://aka.ms/AzDforOpenSourceDBsDocu.",
        "displayName": "Configure Advanced Threat Protection to be enabled on open-source relational databases",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e77fc0b3-f7e9-4c58-bc13-cb753ed8e46e",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#28": {
      "name": "Deploy-MDFC-SqlAtp",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Azure Defender on your SQL Servers and SQL Managed Instances to detect anomalous activities indicating unusual and potentially harmful attempts to access or exploit databases.",
        "displayName": "Configure Azure Defender to be enabled on SQL Servers and SQL Managed Instances",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
        "definitionVersion": "3.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#29": {
      "name": "Deploy-Private-DNS-Zones",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy initiative is a group of policies that ensures private endpoints to Azure PaaS services are integrated with Azure Private DNS zones.",
        "displayName": "Configure Azure PaaS services to use private DNS zones",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "DeployIfNotExists"
          },
          "effect1": {
            "value": "deployIfNotExists"
          },
          "azureAcrPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAcrPrivateDnsZoneId"
          },
          "azureAppPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAppPrivateDnsZoneId"
          },
          "azureAppServicesPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAppServicesPrivateDnsZoneId"
          },
          "azureArcGuestconfigurationPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureArcGuestconfigurationPrivateDnsZoneId"
          },
          "azureArcHybridResourceProviderPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureArcHybridResourceProviderPrivateDnsZoneId"
          },
          "azureArcKubernetesConfigurationPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureArcKubernetesConfigurationPrivateDnsZoneId"
          },
          "azureAsrPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAsrPrivateDnsZoneId"
          },
          "azureAutomationDSCHybridPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAutomationDSCHybridPrivateDnsZoneId"
          },
          "azureAutomationWebhookPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureAutomationWebhookPrivateDnsZoneId"
          },
          "azureBatchPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureBatchPrivateDnsZoneId"
          },
          "azureBotServicePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureBotServicePrivateDnsZoneId"
          },
          "azureCognitiveSearchPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCognitiveSearchPrivateDnsZoneId"
          },
          "azureCognitiveServicesPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCognitiveServicesPrivateDnsZoneId"
          },
          "azureCosmosCassandraPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCosmosCassandraPrivateDnsZoneId"
          },
          "azureCosmosGremlinPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCosmosGremlinPrivateDnsZoneId"
          },
          "azureCosmosMongoPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCosmosMongoPrivateDnsZoneId"
          },
          "azureCosmosSQLPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCosmosSQLPrivateDnsZoneId"
          },
          "azureCosmosTablePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureCosmosTablePrivateDnsZoneId"
          },
          "azureDataFactoryPortalPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureDataFactoryPortalPrivateDnsZoneId"
          },
          "azureDataFactoryPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureDataFactoryPrivateDnsZoneId"
          },
          "azureDatabricksPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureDatabricksPrivateDnsZoneId"
          },
          "azureDiskAccessPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureDiskAccessPrivateDnsZoneId"
          },
          "azureEventGridDomainsPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureEventGridDomainsPrivateDnsZoneId"
          },
          "azureEventGridTopicsPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureEventGridTopicsPrivateDnsZoneId"
          },
          "azureEventHubNamespacePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureEventHubNamespacePrivateDnsZoneId"
          },
          "azureFilePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureFilePrivateDnsZoneId"
          },
          "azureHDInsightPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureHDInsightPrivateDnsZoneId"
          },
          "azureIotCentralPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureIotCentralPrivateDnsZoneId"
          },
          "azureIotDeviceupdatePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureIotDeviceupdatePrivateDnsZoneId"
          },
          "azureIotHubsPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureIotHubsPrivateDnsZoneId"
          },
          "azureIotPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureIotPrivateDnsZoneId"
          },
          "azureKeyVaultPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureKeyVaultPrivateDnsZoneId"
          },
          "azureMachineLearningWorkspacePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMachineLearningWorkspacePrivateDnsZoneId"
          },
          "azureMachineLearningWorkspaceSecondPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMachineLearningWorkspaceSecondPrivateDnsZoneId"
          },
          "azureManagedGrafanaWorkspacePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureManagedGrafanaWorkspacePrivateDnsZoneId"
          },
          "azureMediaServicesKeyPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMediaServicesKeyPrivateDnsZoneId"
          },
          "azureMediaServicesLivePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMediaServicesLivePrivateDnsZoneId"
          },
          "azureMediaServicesStreamPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMediaServicesStreamPrivateDnsZoneId"
          },
          "azureMigratePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMigratePrivateDnsZoneId"
          },
          "azureMonitorPrivateDnsZoneId1": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMonitorPrivateDnsZoneId1"
          },
          "azureMonitorPrivateDnsZoneId2": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMonitorPrivateDnsZoneId2"
          },
          "azureMonitorPrivateDnsZoneId3": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMonitorPrivateDnsZoneId3"
          },
          "azureMonitorPrivateDnsZoneId4": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMonitorPrivateDnsZoneId4"
          },
          "azureMonitorPrivateDnsZoneId5": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureMonitorPrivateDnsZoneId5"
          },
          "azureRedisCachePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureRedisCachePrivateDnsZoneId"
          },
          "azureServiceBusNamespacePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureServiceBusNamespacePrivateDnsZoneId"
          },
          "azureSignalRPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSignalRPrivateDnsZoneId"
          },
          "azureSiteRecoveryBackupPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSiteRecoveryBackupPrivateDnsZoneId"
          },
          "azureSiteRecoveryBlobPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSiteRecoveryBlobPrivateDnsZoneId"
          },
          "azureSiteRecoveryQueuePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSiteRecoveryQueuePrivateDnsZoneId"
          },
          "azureStorageBlobPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageBlobPrivateDnsZoneId"
          },
          "azureStorageBlobSecPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageBlobSecPrivateDnsZoneId"
          },
          "azureStorageDFSPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageDFSPrivateDnsZoneId"
          },
          "azureStorageDFSSecPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageDFSSecPrivateDnsZoneId"
          },
          "azureStorageFilePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageFilePrivateDnsZoneId"
          },
          "azureStorageQueuePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageQueuePrivateDnsZoneId"
          },
          "azureStorageQueueSecPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageQueueSecPrivateDnsZoneId"
          },
          "azureStorageStaticWebPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageStaticWebPrivateDnsZoneId"
          },
          "azureStorageStaticWebSecPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageStaticWebSecPrivateDnsZoneId"
          },
          "azureStorageTablePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageTablePrivateDnsZoneId"
          },
          "azureStorageTableSecondaryPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureStorageTableSecondaryPrivateDnsZoneId"
          },
          "azureSynapseDevPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSynapseDevPrivateDnsZoneId"
          },
          "azureSynapseSQLPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSynapseSQLPrivateDnsZoneId"
          },
          "azureSynapseSQLODPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureSynapseSQLODPrivateDnsZoneId"
          },
          "azureVirtualDesktopHostpoolPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureVirtualDesktopHostpoolPrivateDnsZoneId"
          },
          "azureVirtualDesktopWorkspacePrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureVirtualDesktopWorkspacePrivateDnsZoneId"
          },
          "azureWebPrivateDnsZoneId": {
            "value": "${varPrivateDnsZonesFinalResourceIds}.azureWebPrivateDnsZoneId"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#3": {
      "name": "Audit-UnusedResources",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This Policy initiative is a group of Policy definitions that help optimize cost by detecting unused but chargeable resources. Leverage this Policy initiative as a cost control to reveal orphaned resources that are driving cost.",
        "displayName": "Unused resources driving cost should be avoided",
        "notScopes": [],
        "parameters": {
          "EffectDisks": {
            "value": "Audit"
          },
          "EffectPublicIpAddresses": {
            "value": "Audit"
          },
          "EffectServerFarms": {
            "value": "Audit"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Audit-UnusedResourcesCostOptimization",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#30": {
      "name": "Deploy-Diag-Logs",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Resource logs should be enabled to track activities and events that take place on your resources and give you visibility and insights into any changes that occur. This initiative deploys diagnostic setting using the allLogs category group to route logs to an Event Hub for all supported resources.",
        "displayName": "Enable allLogs category group resource logging for supported resources to Log Analytics",
        "notScopes": [],
        "parameters": {
          "logAnalytics": {
            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/${parTopLevelManagementGroupPrefix}-mgmt/providers/Microsoft.OperationalInsights/workspaces/${parTopLevelManagementGroupPrefix}-la"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/0884adba-2312-4468-abeb-5422caed1038",
        "definitionVersion": "1.*.*",
        "conditionalDefinitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#31": {
      "name": "Deploy-SQL-TDE",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy ensures that Transparent Data Encryption is enabled on SQL Servers.",
        "displayName": "Deploy TDE on SQL servers",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#32": {
      "name": "Deploy-SQL-Threat",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy ensures that Threat Detection is enabled on SQL Servers.",
        "displayName": "Deploy Threat Detection on SQL servers",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#33": {
      "name": "Deploy-VM-Backup",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enforce backup for all virtual machines by deploying a recovery services vault in the same location and resource group as the virtual machine. Doing this is useful when different application teams in your organization are allocated separate resource groups and need to manage their own backups and restores. You can optionally exclude virtual machines containing a specified tag to control the scope of assignment. See https://aka.ms/AzureVMAppCentricBackupExcludeTag.",
        "displayName": "Configure backup on virtual machines without a given tag to a new recovery services vault with a default policy",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "deployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86",
        "definitionVersion": "9.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#34": {
      "name": "Deploy-vmArc-ChangeTrack",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations.",
        "displayName": "Enable ChangeTracking and Inventory for Arc-enabled virtual machines",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleChangeTrackingResourceId}"
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/53448c70-089b-4f52-8f38-89196d7f2de1",
        "definitionVersion": "1.*.*-preview",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#35": {
      "name": "Deploy-VM-ChangeTrack",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable ChangeTracking and Inventory for virtual machines. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
        "displayName": "Enable ChangeTracking and Inventory for virtual machines",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleChangeTrackingResourceId}"
          },
          "bringYourOwnUserAssignedManagedIdentity": {
            "value": true
          },
          "restrictBringYourOwnUserAssignedIdentityToSubscription": {
            "value": false
          },
          "userAssignedIdentityResourceId": {
            "value": "${parUserAssignedManagedIdentityResourceId}"
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/92a36f05-ebc9-4bba-9128-b47ad2ea3354",
        "definitionVersion": "1.*.*-preview",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#36": {
      "name": "Deploy-VMSS-ChangeTrack",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable ChangeTracking and Inventory for virtual machine scale sets. Takes Data Collection Rule ID as parameter and asks for an option to input applicable locations and user-assigned identity for Azure Monitor Agent.",
        "displayName": "Enable ChangeTracking and Inventory for virtual machine scale sets",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleChangeTrackingResourceId}"
          },
          "bringYourOwnUserAssignedManagedIdentity": {
            "value": true
          },
          "restrictBringYourOwnUserAssignedIdentityToSubscription": {
            "value": false
          },
          "userAssignedIdentityResourceId": {
            "value": "${parUserAssignedManagedIdentityResourceId}"
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/c4a70814-96be-461c-889f-2b27429120dc",
        "definitionVersion": "1.*.*-preview",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#37": {
      "name": "Deploy-vmHybr-Monitoring",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Azure Monitor for Hybrid Virtual Machines in the specified scope (Management group, Subscription or resource group).",
        "displayName": "Enable Azure Monitor for Hybrid Virtual Machines",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleVMInsightsResourceId}"
          },
          "enableProcessesAndDependencies": {
            "value": true
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/2b00397d-c309-49c4-aa5a-f0b2c5bc6321",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#38": {
      "name": "Deploy-VM-Monitor-24",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Azure Monitor for the virtual machines (VMs) in the specified scope (management group, subscription or resource group). Takes Log Analytics workspace as parameter.",
        "displayName": "Enable Azure Monitor for VMs",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleVMInsightsResourceId}"
          },
          "enableProcessesAndDependencies": {
            "value": true
          },
          "scopeToSupportedImages": {
            "value": false
          },
          "bringYourOwnUserAssignedManagedIdentity": {
            "value": true
          },
          "restrictBringYourOwnUserAssignedIdentityToSubscription": {
            "value": false
          },
          "userAssignedIdentityResourceId": {
            "value": "${parUserAssignedManagedIdentityResourceId}"
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/924bfe3a-762f-40e7-86dd-5c8b95eb09e6",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#39": {
      "name": "Deploy-VMSS-Monitor-24",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Enable Azure Monitor for the Virtual Machine Scale Sets in the specified scope (Management group, Subscription or resource group). Takes Log Analytics workspace as parameter. Note: if your scale set upgradePolicy is set to Manual, you need to apply the extension to the all VMs in the set by calling upgrade on them. In CLI this would be az vmss update-instances.",
        "displayName": "Enable Azure Monitor for Virtual Machine Scale Sets",
        "notScopes": [],
        "parameters": {
          "dcrResourceId": {
            "value": "${parDataCollectionRuleVMInsightsResourceId}"
          },
          "enableProcessesAndDependencies": {
            "value": true
          },
          "scopeToSupportedImages": {
            "value": false
          },
          "bringYourOwnUserAssignedManagedIdentity": {
            "value": true
          },
          "restrictBringYourOwnUserAssignedIdentityToSubscription": {
            "value": false
          },
          "userAssignedIdentityResourceId": {
            "value": "${parUserAssignedManagedIdentityResourceId}"
          },
          "effect": {
            "value": "DeployIfNotExists"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/f5bf694c-cca7-4033-b883-3a23327d5485",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#4": {
      "name": "Audit-TrustedLaunch",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Trusted Launch improves security of a Virtual Machine which requires VM SKU, OS Disk & OS Image to support it (Gen 2). To learn more about Trusted Launch, visit https://aka.ms/trustedlaunch.",
        "displayName": "Audit virtual machines for Trusted Launch support",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Audit-TrustedLaunch",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#40": {
      "name": "Deploy-MDFC-DefSQL-AMA",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Microsoft Defender for SQL collects events from the agents and uses them to provide security alerts and tailored hardening tasks (recommendations).",
        "displayName": "Enable Defender for SQL on SQL VMs and Arc-enabled SQL Servers",
        "notScopes": [],
        "parameters": {
          "userWorkspaceResourceId": {
            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourcegroups/alz-logging/providers/Microsoft.OperationalInsights/workspaces/${parTopLevelManagementGroupPrefix}-la"
          },
          "dcrResourceId": {
            "value": "${parDataCollectionRuleMDFCSQLResourceId}"
          },
          "bringYourOwnUserAssignedManagedIdentity": {
            "value": true
          },
          "bringYourOwnDcr": {
            "value": true
          },
          "userAssignedIdentityResourceId": {
            "value": "${parDataCollectionRuleMDFCSQLResourceId}"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#41": {
      "name": "DenyAction-DeleteUAMIAMA",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy provides a safeguard against accidental removal of the User Assigned Managed Identity used by AMA by blocking delete calls using deny action effect.",
        "displayName": "Do not allow deletion of the User Assigned Managed Identity used by AMA",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "DenyAction"
          },
          "resourceName": {
            "value": "alz-umi-identity"
          },
          "resourceType": {
            "value": "Microsoft.ManagedIdentity/userAssignedIdentities"
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DeleteResources",
        "scope": "${current_scope_resource_id}",
        "enforcementMode": "Default"
      },
      "location": "${default_location}",
      "identity": {
        "type": "None"
      }
    },
    "$fxv#42": {
      "name": "Enable-DDoS-VNET",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Protect your virtual networks against volumetric and protocol attacks with Azure DDoS Protection Standard. For more information, visit https://aka.ms/ddosprotectiondocs.",
        "displayName": "Virtual networks should be protected by Azure DDoS Protection Standard",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Modify"
          },
          "ddosPlan": {
            "value": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/${parTopLevelManagementGroupPrefix}-mgmt/providers/Microsoft.Network/ddosProtectionPlans/${parTopLevelManagementGroupPrefix}-ddos"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#43": {
      "name": "Enforce-Subnet-Private",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Ensure your subnets are secure by default by preventing default outbound access. For more information go to https://aka.ms/defaultoutboundaccessretirement",
        "displayName": "Subnets should be private",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/7bca8353-aa3b-429b-904a-9229c4385837",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#44": {
      "name": "Enforce-ACSB",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This initiative assignment enables Azure Compute Security Baseline compliance auditing for Windows and Linux virtual machines.",
        "displayName": "Enforce Azure Compute Security Baseline compliance auditing",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ACSB",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#45": {
      "name": "Enforce-ASR",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This initiative assignment enables recommended ALZ guardrails for Azure Recovery Services.",
        "displayName": "Enforce enhanced recovery and backup policies",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Backup",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#46": {
      "name": "Enforce-ALZ-Decomm",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This initiative will help enforce and govern subscriptions that are placed within the decommissioned Management Group as part of your Subscription decommissioning process. See https://aka.ms/alz/policies for more information.",
        "displayName": "Enforce ALZ Decommissioned Guardrails",
        "notScopes": [],
        "parameters": {
          "listOfResourceTypesAllowed": {
            "value": [
              "microsoft.consumption/tags",
              "microsoft.authorization/roleassignments",
              "microsoft.authorization/roledefinitions",
              "microsoft.authorization/policyassignments",
              "microsoft.authorization/locks",
              "microsoft.authorization/policydefinitions",
              "microsoft.authorization/policysetdefinitions",
              "microsoft.resources/tags",
              "microsoft.authorization/roleeligibilityschedules",
              "microsoft.authorization/roleeligibilityscheduleinstances",
              "microsoft.authorization/roleassignmentschedules",
              "microsoft.authorization/roleassignmentscheduleinstances"
            ]
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Decomm",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#47": {
      "name": "Enforce-ALZ-Sandbox",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This initiative will help enforce and govern subscriptions that are placed within the Sandobx Management Group. See https://aka.ms/alz/policies for more information.",
        "displayName": "Enforce ALZ Sandbox Guardrails",
        "notScopes": [],
        "parameters": {
          "listOfResourceTypesNotAllowed": {
            "value": [
              "microsoft.network/expressroutecircuits",
              "microsoft.network/expressroutegateways",
              "microsoft.network/expressrouteports",
              "microsoft.network/virtualwans",
              "microsoft.network/virtualhubs",
              "microsoft.network/vpngateways",
              "microsoft.network/p2svpngateways",
              "microsoft.network/vpnsites",
              "microsoft.network/virtualnetworkgateways"
            ]
          }
        },
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Sandbox",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#48": {
      "name": "Enforce-GR-KeyVault",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2025-01-01",
      "properties": {
        "description": "This initiative assignment enables recommended ALZ guardrails for Azure Key Vault.",
        "displayName": "Enforce recommended guardrails for Azure Key Vault",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#49": {
      "name": "Enforce-TLS-SSL-Q225",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Choose either Deploy if not exist and append in combination with audit or Select Deny in the Policy effect. Deny polices shift left. Deploy if not exist and append enforce but can be changed, and because missing exsistense condition require then the combination of Audit.",
        "displayName": "Deny or Deploy and append TLS requirements and SSL enforcement on resources without Encryption in transit",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "${varTopLevelManagementGroupResourceId}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit_20241211",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "SystemAssigned"
      }
    },
    "$fxv#5": {
      "name": "Audit-ZoneResiliency",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Resources should be Zone Resilient.",
        "displayName": "Resources should be Zone Resilient",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "Audit"
          },
          "allow": {
            "value": "Both"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/130fb88f-0fc9-4678-bfe1-31022d71c7d5",
        "definitionVersion": "1.*.*-preview",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#6": {
      "name": "Deny-Classic-Resources",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Denies deployment of classic resource types under the assigned scope.",
        "displayName": "Deny the deployment of classic resources",
        "notScopes": [],
        "parameters": {
          "listOfResourceTypesNotAllowed": {
            "value": [
              "Microsoft.ClassicCompute/capabilities",
              "Microsoft.ClassicCompute/checkDomainNameAvailability",
              "Microsoft.ClassicCompute/domainNames",
              "Microsoft.ClassicCompute/domainNames/capabilities",
              "Microsoft.ClassicCompute/domainNames/internalLoadBalancers",
              "Microsoft.ClassicCompute/domainNames/serviceCertificates",
              "Microsoft.ClassicCompute/domainNames/slots",
              "Microsoft.ClassicCompute/domainNames/slots/roles",
              "Microsoft.ClassicCompute/domainNames/slots/roles/metricDefinitions",
              "Microsoft.ClassicCompute/domainNames/slots/roles/metrics",
              "Microsoft.ClassicCompute/moveSubscriptionResources",
              "Microsoft.ClassicCompute/operatingSystemFamilies",
              "Microsoft.ClassicCompute/operatingSystems",
              "Microsoft.ClassicCompute/operations",
              "Microsoft.ClassicCompute/operationStatuses",
              "Microsoft.ClassicCompute/quotas",
              "Microsoft.ClassicCompute/resourceTypes",
              "Microsoft.ClassicCompute/validateSubscriptionMoveAvailability",
              "Microsoft.ClassicCompute/virtualMachines",
              "Microsoft.ClassicCompute/virtualMachines/diagnosticSettings",
              "Microsoft.ClassicCompute/virtualMachines/metricDefinitions",
              "Microsoft.ClassicCompute/virtualMachines/metrics",
              "Microsoft.ClassicInfrastructureMigrate/classicInfrastructureResources",
              "Microsoft.ClassicNetwork/capabilities",
              "Microsoft.ClassicNetwork/expressRouteCrossConnections",
              "Microsoft.ClassicNetwork/expressRouteCrossConnections/peerings",
              "Microsoft.ClassicNetwork/gatewaySupportedDevices",
              "Microsoft.ClassicNetwork/networkSecurityGroups",
              "Microsoft.ClassicNetwork/operations",
              "Microsoft.ClassicNetwork/quotas",
              "Microsoft.ClassicNetwork/reservedIps",
              "Microsoft.ClassicNetwork/virtualNetworks",
              "Microsoft.ClassicNetwork/virtualNetworks/remoteVirtualNetworkPeeringProxies",
              "Microsoft.ClassicNetwork/virtualNetworks/virtualNetworkPeerings",
              "Microsoft.ClassicStorage/capabilities",
              "Microsoft.ClassicStorage/checkStorageAccountAvailability",
              "Microsoft.ClassicStorage/disks",
              "Microsoft.ClassicStorage/images",
              "Microsoft.ClassicStorage/operations",
              "Microsoft.ClassicStorage/osImages",
              "Microsoft.ClassicStorage/osPlatformImages",
              "Microsoft.ClassicStorage/publicImages",
              "Microsoft.ClassicStorage/quotas",
              "Microsoft.ClassicStorage/storageAccounts",
              "Microsoft.ClassicStorage/storageAccounts/blobServices",
              "Microsoft.ClassicStorage/storageAccounts/fileServices",
              "Microsoft.ClassicStorage/storageAccounts/metricDefinitions",
              "Microsoft.ClassicStorage/storageAccounts/metrics",
              "Microsoft.ClassicStorage/storageAccounts/queueServices",
              "Microsoft.ClassicStorage/storageAccounts/services",
              "Microsoft.ClassicStorage/storageAccounts/services/diagnosticSettings",
              "Microsoft.ClassicStorage/storageAccounts/services/metricDefinitions",
              "Microsoft.ClassicStorage/storageAccounts/services/metrics",
              "Microsoft.ClassicStorage/storageAccounts/tableServices",
              "Microsoft.ClassicStorage/storageAccounts/vmImages",
              "Microsoft.ClassicStorage/vmImages",
              "Microsoft.ClassicSubscription/operations"
            ]
          },
          "effect": {
            "value": "Deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#7": {
      "name": "Enforce-AKS-HTTPS",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Use of HTTPS ensures authentication and protects data in transit from network layer eavesdropping attacks. This capability is currently generally available for Kubernetes Service (AKS), and in preview for AKS Engine and Azure Arc enabled Kubernetes. For more info, visit https://aka.ms/kubepolicydoc.",
        "displayName": "Kubernetes clusters should be accessible only over HTTPS",
        "notScopes": [],
        "parameters": {
          "effect": {
            "value": "deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
        "definitionVersion": "8.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#8": {
      "name": "Deny-HybridNetworking",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "Denies deployment of vWAN/ER/VPN gateway resources in the Corp landing zone.",
        "displayName": "Deny the deployment of vWAN/ER/VPN gateway resources",
        "notScopes": [],
        "parameters": {
          "listOfResourceTypesNotAllowed": {
            "value": [
              "microsoft.network/expressroutecircuits",
              "microsoft.network/expressroutegateways",
              "microsoft.network/expressrouteports",
              "microsoft.network/virtualwans",
              "microsoft.network/vpngateways",
              "microsoft.network/p2svpngateways",
              "microsoft.network/vpnsites",
              "microsoft.network/virtualnetworkgateways"
            ]
          },
          "effect": {
            "value": "Deny"
          }
        },
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
        "definitionVersion": "2.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "$fxv#9": {
      "name": "Deny-IP-Forwarding",
      "type": "Microsoft.Authorization/policyAssignments",
      "apiVersion": "2024-04-01",
      "properties": {
        "description": "This policy denies the network interfaces which enabled IP forwarding. The setting of IP forwarding disables Azure's check of the source and destination for a network interface. This should be reviewed by the network security team.",
        "displayName": "Network interfaces should disable IP forwarding",
        "notScopes": [],
        "parameters": {},
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
        "definitionVersion": "1.*.*",
        "scope": null,
        "enforcementMode": "Default"
      },
      "location": null,
      "identity": {
        "type": "None"
      }
    },
    "varLogAnalyticsWorkspaceName": "[split(parameters('parLogAnalyticsWorkspaceResourceId'), '/')[8]]",
    "varLogAnalyticsWorkspaceResourceGroupName": "[split(parameters('parLogAnalyticsWorkspaceResourceId'), '/')[4]]",
    "varLogAnalyticsWorkspaceSubscription": "[split(parameters('parLogAnalyticsWorkspaceResourceId'), '/')[2]]",
    "varUserAssignedManagedIdentityResourceName": "lee-policy-remediation-umi",
    "varCuaid": "98cef979-5a6b-403b-83c7-10c8f04ac9a2",
    "varZtnP1CuaId": "4eaba1fc-d30a-4e63-a57f-9e6c3d86a318",
    "varZtnP1Trigger": "[and(not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name)), not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyStoragehttp').libDefinition.name)))]",
    "varDeploymentNameWrappers": {
      "basePrefix": "ALZB",
      "baseSuffixTenantAndManagementGroup": "[format('{0}-{1}', deployment().location, uniqueString(deployment().location, parameters('parTopLevelManagementGroupPrefix')))]"
    },
    "varModDepNames": {
      "modPolAssiIntRootDeployMdfcConfig": "[take(format('{0}-deployMDFCConfig-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployAzActivityLog": "[take(format('{0}-deployAzActLog-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployAscMonitoring": "[take(format('{0}-deployASCMon-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployResourceDiag": "[take(format('{0}-deployResDiag-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployMDEnpoints": "[take(format('{0}-deployMDEnd-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployMDEnpointsAma": "[take(format('{0}-deployMDEndAma-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootEnforceAcsb": "[take(format('{0}-enforceAcsb-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployMdfcOssDb": "[take(format('{0}-deployMdfcOssDb-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDeployMdfcSqlAtp": "[take(format('{0}-deployMdfcSqlAtp-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootAuditLocationMatch": "[take(format('{0}-auditLocMatch-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootAuditZoneResiliency": "[take(format('{0}-auditZoneRes-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootAuditUnusedRes": "[take(format('{0}-auditUnusedRes-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootAuditTrustedLaunch": "[take(format('{0}-auditTrustLaunch-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDenyClassicRes": "[take(format('{0}-denyClassicRes-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIntRootDenyUnmanagedDisks": "[take(format('{0}-denyUnmgdDisks-intRoot-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmArcTrack": "[take(format('{0}-deployVmArcTrack-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmChangeTrack": "[take(format('{0}-deployVmChgTrack-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmssChangeTrack": "[take(format('{0}-deployVmssChgTrack-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmArcMonitor": "[take(format('{0}-deployVmArcMon-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmMonitor": "[take(format('{0}-deployVmMon-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployVmssMonitor": "[take(format('{0}-deployVmssMon-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDeployMdfcDefSqlAma": "[take(format('{0}-deployMdfcDefSqlAma-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformDenyDeleteUAMIAMA": "[take(format('{0}-denyDelUamiAma-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformEnforceSubnetPrivate": "[take(format('{0}-enforceSubnetPriv-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformEnforceGrKeyVault": "[take(format('{0}-enforceGrKeyVault-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformEnforceAsr": "[take(format('{0}-enforceAsr-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiPlatformEnforceAumCheckUpdates": "[take(format('{0}-enforceAumChkUpd-platform-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiConnEnableDdosVnet": "[take(format('{0}-enableDdosVnet-conn-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIdentDenyPublicIp": "[take(format('{0}-denyPublicIp-ident-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIdentDenyMgmtPortsFromInternet": "[take(format('{0}-denyMgmtPortsInet-ident-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIdentDenySubnetWithoutNsg": "[take(format('{0}-denySubnetNoNsg-ident-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiIdentDeployVmBackup": "[take(format('{0}-deployVmBackup-ident-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiMgmtDeployLogAnalytics": "[take(format('{0}-deployLogAnalytics-mgmt-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenyIpForwarding": "[take(format('{0}-denyIpForward-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenyMgmtPortsFromInternet": "[take(format('{0}-denyMgmtPortsInet-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenySubnetWithoutNsg": "[take(format('{0}-denySubnetNoNsg-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmBackup": "[take(format('{0}-deployVmBackup-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnableDdosVnet": "[take(format('{0}-enableDdosVnet-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenyStorageHttp": "[take(format('{0}-denyStorageHttp-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenyPrivEscalationAks": "[take(format('{0}-denyPrivEscAks-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDenyPrivContainersAks": "[take(format('{0}-denyPrivConAks-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnforceAksHttps": "[take(format('{0}-enforceAksHttps-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnforceTlsSsl": "[take(format('{0}-enforceTlsSsl-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployAzSqlDbAuditing": "[take(format('{0}-deployAzSqlDbAudit-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeploySqlThreat": "[take(format('{0}-deploySqlThreat-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeploySqlTde": "[take(format('{0}-deploySqlTde-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmArcTrack": "[take(format('{0}-deployVmArcTrack-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmChangeTrack": "[take(format('{0}-deployVmChgTrack-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmssChangeTrack": "[take(format('{0}-deployVmssChgTrack-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmArcMonitor": "[take(format('{0}-deployVmArcMon-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmMonitor": "[take(format('{0}-deployVmMon-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployVmssMonitor": "[take(format('{0}-deployVmssMon-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsDeployMdfcDefSqlAma": "[take(format('{0}-deployMdfcDefSqlAma-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnforceSubnetPrivate": "[take(format('{0}-enforceSubnetPriv-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnforceGrKeyVault": "[take(format('{0}-enforceGrKeyVault-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsEnforceAsr": "[take(format('{0}-enforceAsr-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsAumCheckUpdates": "[take(format('{0}-aumChkUpd-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsAuditAppGwWaf": "[take(format('{0}-auditAppGwWaf-lz-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsCorpDenyPublicEndpoints": "[take(format('{0}-denyPubEnd-corp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsConfidentialCorpDenyPublicEndpoints": "[take(format('{0}-denyPubEnd-confCorp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsCorpDeployPrivateDnsZones": "[take(format('{0}-deployPrivDns-corp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsConfidentialCorpDeployPrivateDnsZones": "[take(format('{0}-deployPrivDns-confCorp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsCorpDenyPipOnNic": "[take(format('{0}-denyPipNic-corp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsConfidentialCorpDenyPipOnNic": "[take(format('{0}-denyPipNic-confCorp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsCorpDenyHybridNet": "[take(format('{0}-denyHybridNet-corp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsConfidentialCorpDenyHybridNet": "[take(format('{0}-denyHybridNet-confCorp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsCorpAuditPeDnsZones": "[take(format('{0}-auditPeDns-corp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiLzsConfidentialCorpAuditPeDnsZones": "[take(format('{0}-auditPeDns-confCorp-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiDecommEnforceAlz": "[take(format('{0}-enforceAlz-decomm-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]",
      "modPolAssiSandboxEnforceAlz": "[take(format('{0}-enforceAlz-sbox-{1}', variables('varDeploymentNameWrappers').basePrefix, variables('varDeploymentNameWrappers').baseSuffixTenantAndManagementGroup), 64)]"
    },
    "varPolicyAssignmentAuditAppGWWAF": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/564feb30-bf6a-4854-b4bb-0d2d2d1e6c66",
      "libDefinition": "[variables('$fxv#0')]"
    },
    "varPolicyAssignmentAuditPeDnsZones": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policyDefinitions/Audit-PrivateLinkDnsZones', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#1')]"
    },
    "varPolicyAssignmentAuditLocationMatch": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/0a914e76-4921-4c19-b460-a2d36003525a",
      "libDefinition": "[variables('$fxv#2')]"
    },
    "varPolicyAssignmentAuditUnusedResources": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Audit-UnusedResourcesCostOptimization', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#3')]"
    },
    "varPolicyAssignmentAuditTrustedLaunch": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Audit-TrustedLaunch', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#4')]"
    },
    "varPolicyAssignmentAuditZoneResiliency": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/130fb88f-0fc9-4678-bfe1-31022d71c7d5",
      "libDefinition": "[variables('$fxv#5')]"
    },
    "varPolicyAssignmentDenyClassicResources": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
      "libDefinition": "[variables('$fxv#6')]"
    },
    "varPolicyAssignmentEnforceAKSHTTPS": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/1a5b4dca-0b6f-4cf5-907c-56316bc1bf3d",
      "libDefinition": "[variables('$fxv#7')]"
    },
    "varPolicyAssignmentDenyHybridNetworking": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
      "libDefinition": "[variables('$fxv#8')]"
    },
    "varPolicyAssignmentDenyIPForwarding": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
      "libDefinition": "[variables('$fxv#9')]"
    },
    "varPolicyAssignmentDenyMgmtPortsInternet": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policyDefinitions/Deny-MgmtPorts-From-Internet', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#10')]"
    },
    "varPolicyAssignmentDenyPrivContainersAKS": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/95edb821-ddaf-4404-9732-666045e056b4",
      "libDefinition": "[variables('$fxv#11')]"
    },
    "varPolicyAssignmentDenyPrivEscalationAKS": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/1c6e92c9-99f0-4e55-9cf2-0c234dc48f99",
      "libDefinition": "[variables('$fxv#12')]"
    },
    "varPolicyAssignmentDenyPublicEndpoints": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Deny-PublicPaaSEndpoints', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#13')]"
    },
    "varPolicyAssignmentDenyPublicIPOnNIC": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/83a86a26-fd1f-447c-b59d-e51f44264114",
      "libDefinition": "[variables('$fxv#14')]"
    },
    "varPolicyAssignmentDenyPublicIP": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/6c112d4e-5bc7-47ae-a041-ea2d9dccd749",
      "libDefinition": "[variables('$fxv#15')]"
    },
    "varPolicyAssignmentEnforceAumCheckUpdates": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-AUM-CheckUpdates', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#16')]"
    },
    "varPolicyAssignmentDenyStoragehttp": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9",
      "libDefinition": "[variables('$fxv#17')]"
    },
    "varPolicyAssignmentDenySubnetWithoutNsg": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#18')]"
    },
    "varPolicyAssignmentDenyUnmanagedDisk": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/06a78e20-9358-41c9-923c-fb736d382a4d",
      "libDefinition": "[variables('$fxv#19')]"
    },
    "varPolicyAssignmentDeployASCMonitoring": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/1f3afdf9-d0c9-4c3d-847f-89da613e70a8",
      "libDefinition": "[variables('$fxv#20')]"
    },
    "varPolicyAssignmentDeployAzActivityLog": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/2465583e-4e78-4c15-b6be-a36cbc7c8b0f",
      "libDefinition": "[variables('$fxv#21')]"
    },
    "varPolicyAssignmentDeployAzSqlDbAuditing": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/25da7dfb-0666-4a15-a8f5-402127efd8bb",
      "libDefinition": "[variables('$fxv#22')]"
    },
    "varPolicyAssignmentDeployLogAnalytics": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/8e3e61b3-0b32-22d5-4edf-55f87fdb5955",
      "libDefinition": "[variables('$fxv#23')]"
    },
    "varPolicyAssignmentDeployMDEndpoints": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e20d08c5-6d64-656d-6465-ce9e37fd0ebc",
      "libDefinition": "[variables('$fxv#24')]"
    },
    "varPolicyAssignmentDeployMDEndpointsAma": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/77b391e3-2d5d-40c3-83bf-65c846b3c6a3",
      "libDefinition": "[variables('$fxv#25')]"
    },
    "varPolicyAssignmentDeployMDFCConfig": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-MDFC-Config_20240319', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#26')]"
    },
    "varPolicyAssignmentDeployMDFCOssDb": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/e77fc0b3-f7e9-4c58-bc13-cb753ed8e46e",
      "libDefinition": "[variables('$fxv#27')]"
    },
    "varPolicyAssignmentDeployMDFCSqlAtp": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/9cb3cc7a-b39b-4b82-bc89-e5a5d9ff7b97",
      "libDefinition": "[variables('$fxv#28')]"
    },
    "varPolicyAssignmentDeployPrivateDNSZones": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Deploy-Private-DNS-Zones', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#29')]"
    },
    "varPolicyAssignmentDeployResourceDiag": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/0884adba-2312-4468-abeb-5422caed1038",
      "conditionalDefinitionId": "/providers/Microsoft.Authorization/policySetDefinitions/f5b29bc4-feca-4cc6-a58a-772dd5e290a5",
      "libDefinition": "[variables('$fxv#30')]"
    },
    "varPolicyAssignmentDeploySQLTDE": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/86a912f6-9a06-4e26-b447-11b16ba8659f",
      "libDefinition": "[variables('$fxv#31')]"
    },
    "varPolicyAssignmentDeploySQLThreat": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/36d49e87-48c4-4f2e-beed-ba4ed02b71f5",
      "libDefinition": "[variables('$fxv#32')]"
    },
    "varPolicyAssignmentDeployVMBackup": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/98d0b9f8-fd90-49c9-88e2-d3baf3b0dd86",
      "libDefinition": "[variables('$fxv#33')]"
    },
    "varPolicyAssignmentDeployVmArcChangeTrack": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/53448c70-089b-4f52-8f38-89196d7f2de1",
      "libDefinition": "[variables('$fxv#34')]"
    },
    "varPolicyAssignmentDeployVmChangeTrack": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/92a36f05-ebc9-4bba-9128-b47ad2ea3354",
      "libDefinition": "[variables('$fxv#35')]"
    },
    "varPolicyAssignmentDeployVmssChangeTrack": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/c4a70814-96be-461c-889f-2b27429120dc",
      "libDefinition": "[variables('$fxv#36')]"
    },
    "varPolicyAssignmentDeployvmHybrMonitoring": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/2b00397d-c309-49c4-aa5a-f0b2c5bc6321",
      "libDefinition": "[variables('$fxv#37')]"
    },
    "varPolicyAssignmentDeployVMMonitor24": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/924bfe3a-762f-40e7-86dd-5c8b95eb09e6",
      "libDefinition": "[variables('$fxv#38')]"
    },
    "varPolicyAssignmentDeployVMSSMonitor24": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/f5bf694c-cca7-4033-b883-3a23327d5485",
      "libDefinition": "[variables('$fxv#39')]"
    },
    "varPolicyAssignmentDeployMdfcDefSqlAma": {
      "definitionId": "/providers/Microsoft.Authorization/policySetDefinitions/de01d381-bae9-4670-8870-786f89f49e26",
      "libDefinition": "[variables('$fxv#40')]"
    },
    "varPolicyAssignmentDenyActionDeleteUAMIAMA": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policyDefinitions/DenyAction-DeleteResources', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#41')]"
    },
    "varPolicyAssignmentEnableDDoSVNET": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/94de2ad3-e0c1-4caf-ad78-5d47bbc83d3d",
      "libDefinition": "[variables('$fxv#42')]"
    },
    "varPolicyAssignmentEnforceSubnetPrivate": {
      "definitionId": "/providers/Microsoft.Authorization/policyDefinitions/7bca8353-aa3b-429b-904a-9229c4385837",
      "libDefinition": "[variables('$fxv#43')]"
    },
    "varPolicyAssignmentEnforceACSB": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ACSB', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#44')]"
    },
    "varPolicyAssignmentEnforceAsr": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Backup', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#45')]"
    },
    "varPolicyAssignmentEnforceALZDecomm": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Decomm', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#46')]"
    },
    "varPolicyAssignmentEnforceALZSandbox": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-ALZ-Sandbox', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#47')]"
    },
    "varPolicyAssignmentEnforceGRKeyVault": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-Guardrails-KeyVault', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#48')]"
    },
    "varPolicyAssignmentEnforceTLSSSL": {
      "definitionId": "[format('{0}/providers/Microsoft.Authorization/policySetDefinitions/Enforce-EncryptTransit_20241211', variables('varTopLevelManagementGroupResourceId'))]",
      "libDefinition": "[variables('$fxv#49')]"
    },
    "varRbacRoleDefinitionIds": {
      "owner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
      "contributor": "b24988ac-6180-42a0-ab88-20f7382dd24c",
      "networkContributor": "4d97b98b-1d4f-4787-a291-c67834d212e7",
      "aksContributor": "ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
      "logAnalyticsContributor": "92aaf0da-9dab-42b6-94a3-d43ce8d16293",
      "sqlSecurityManager": "056cd41c-7e88-42e1-933e-88ba6a50c9c3",
      "vmContributor": "9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
      "monitoringContributor": "749f88d5-cbae-40b8-bcfc-e573ddc772fa",
      "aksPolicyAddon": "18ed5180-3e48-46fd-8541-4ea054d57064",
      "sqlDbContributor": "9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
      "backupContributor": "5e467623-bb1f-42f4-a55d-6e525e11384b",
      "rbacSecurityAdmin": "fb1c8493-542b-48eb-b624-b4c8fea62acd",
      "reader": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
      "managedIdentityOperator": "f1a07417-d97a-45cb-824c-7a7467783830",
      "connectedMachineResourceAdministrator": "cd570a14-e51a-42ad-bac8-bafd67325302"
    },
    "varManagementGroupIds": {
      "intRoot": "LeeCompany-MG",
      "platform": "Platform-MG",
      "platformManagement": "Management-MG",
      "platformConnectivity": "Connectivity-MG",
      "platformIdentity": "IdentityOps-MG",
      "landingZones": "LandingZones-MG",
      "landingZonesOnline": "Apps-MG",
      "landingZonesCorp": "Core-MG",
      "landingZonesConfidentialCorp": "",
      "landingZonesConfidentialOnline": "",
      "decommissioned": "Decommissioned-MG",
      "sandbox": "Sandbox-MG"
    },
    "varManagementGroupIdsUnioned": "[union(variables('varManagementGroupIds'), coalesce(parameters('parManagementGroupIdOverrides'), createObject()))]",
    "varCorpManagementGroupIds": [
      "[variables('varManagementGroupIdsUnioned').landingZonesCorp]",
      "[variables('varManagementGroupIdsUnioned').landingZonesConfidentialCorp]"
    ],
    "varCorpManagementGroupIdsFiltered": "[if(parameters('parLandingZoneMgConfidentialEnable'), variables('varCorpManagementGroupIds'), filter(variables('varCorpManagementGroupIds'), lambda('mg', not(contains(toLower(lambdaVariables('mg')), 'confidential')))))]",
    "varTopLevelManagementGroupResourceId": "[format('/providers/Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
    "varPrivateDnsZonesResourceGroupSubscriptionId": "[if(not(empty(parameters('parPrivateDnsResourceGroupId'))), split(parameters('parPrivateDnsResourceGroupId'), '/')[2], '')]",
    "varPrivateDnsZonesBaseResourceId": "[format('{0}/providers/Microsoft.Network/privateDnsZones/', parameters('parPrivateDnsResourceGroupId'))]",
    "varGeoCodes": {
      "australiacentral": "acl",
      "australiacentral2": "acl2",
      "australiaeast": "ae",
      "australiasoutheast": "ase",
      "brazilsoutheast": "bse",
      "brazilsouth": "brs",
      "canadacentral": "cnc",
      "canadaeast": "cne",
      "centralindia": "inc",
      "centralus": "cus",
      "centraluseuap": "ccy",
      "chilecentral": "clc",
      "eastasia": "ea",
      "eastus": "eus",
      "eastus2": "eus2",
      "eastus2euap": "ecy",
      "francecentral": "frc",
      "francesouth": "frs",
      "germanynorth": "gn",
      "germanywestcentral": "gwc",
      "israelcentral": "ilc",
      "italynorth": "itn",
      "japaneast": "jpe",
      "japanwest": "jpw",
      "koreacentral": "krc",
      "koreasouth": "krs",
      "malaysiasouth": "mys",
      "malaysiawest": "myw",
      "mexicocentral": "mxc",
      "newzealandnorth": "nzn",
      "northcentralus": "ncus",
      "northeurope": "ne",
      "norwayeast": "nwe",
      "norwaywest": "nww",
      "polandcentral": "plc",
      "qatarcentral": "qac",
      "southafricanorth": "san",
      "southafricawest": "saw",
      "southcentralus": "scus",
      "southeastasia": "sea",
      "southindia": "ins",
      "spaincentral": "spc",
      "swedencentral": "sdc",
      "swedensouth": "sds",
      "switzerlandnorth": "szn",
      "switzerlandwest": "szw",
      "taiwannorth": "twn",
      "uaecentral": "uac",
      "uaenorth": "uan",
      "uksouth": "uks",
      "ukwest": "ukw",
      "westcentralus": "wcus",
      "westeurope": "we",
      "westindia": "inw",
      "westus": "wus",
      "westus2": "wus2",
      "westus3": "wus3"
    },
    "varSelectedGeoCode": "[if(not(empty(parameters('parPrivateDnsZonesLocation'))), variables('varGeoCodes')[parameters('parPrivateDnsZonesLocation')], null())]",
    "varPrivateDnsZonesFinalResourceIds": {
      "azureAcrPrivateDnsZoneId": "[format('{0}privatelink.azurecr.io', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureAppPrivateDnsZoneId": "[format('{0}privatelink.azconfig.io', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureAppServicesPrivateDnsZoneId": "[format('{0}privatelink.azurewebsites.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureArcGuestconfigurationPrivateDnsZoneId": "[format('{0}privatelink.guestconfiguration.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureArcHybridResourceProviderPrivateDnsZoneId": "[format('{0}privatelink.his.arc.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureArcKubernetesConfigurationPrivateDnsZoneId": "[format('{0}privatelink.dp.kubernetesconfiguration.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureAsrPrivateDnsZoneId": "[format('{0}privatelink.siterecovery.windowsazure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureAutomationDSCHybridPrivateDnsZoneId": "[format('{0}privatelink.azure-automation.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureAutomationWebhookPrivateDnsZoneId": "[format('{0}privatelink.azure-automation.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureBatchPrivateDnsZoneId": "[format('{0}privatelink.batch.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureBotServicePrivateDnsZoneId": "[format('{0}privatelink.directline.botframework.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCognitiveSearchPrivateDnsZoneId": "[format('{0}privatelink.search.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCognitiveServicesPrivateDnsZoneId": "[format('{0}privatelink.cognitiveservices.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCosmosCassandraPrivateDnsZoneId": "[format('{0}privatelink.cassandra.cosmos.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCosmosGremlinPrivateDnsZoneId": "[format('{0}privatelink.gremlin.cosmos.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCosmosMongoPrivateDnsZoneId": "[format('{0}privatelink.mongo.cosmos.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCosmosSQLPrivateDnsZoneId": "[format('{0}privatelink.documents.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureCosmosTablePrivateDnsZoneId": "[format('{0}privatelink.table.cosmos.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureDataFactoryPortalPrivateDnsZoneId": "[format('{0}privatelink.adf.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureDataFactoryPrivateDnsZoneId": "[format('{0}privatelink.datafactory.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureDatabricksPrivateDnsZoneId": "[format('{0}privatelink.azuredatabricks.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureDiskAccessPrivateDnsZoneId": "[format('{0}privatelink.blob.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureEventGridDomainsPrivateDnsZoneId": "[format('{0}privatelink.eventgrid.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureEventGridTopicsPrivateDnsZoneId": "[format('{0}privatelink.eventgrid.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureEventHubNamespacePrivateDnsZoneId": "[format('{0}privatelink.servicebus.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureFilePrivateDnsZoneId": "[format('{0}privatelink.afs.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureHDInsightPrivateDnsZoneId": "[format('{0}privatelink.azurehdinsight.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureIotCentralPrivateDnsZoneId": "[format('{0}privatelink.azureiotcentral.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureIotDeviceupdatePrivateDnsZoneId": "[format('{0}privatelink.azure-devices.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureIotHubsPrivateDnsZoneId": "[format('{0}privatelink.azure-devices.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureIotPrivateDnsZoneId": "[format('{0}privatelink.azure-devices-provisioning.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureKeyVaultPrivateDnsZoneId": "[format('{0}privatelink.vaultcore.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMachineLearningWorkspacePrivateDnsZoneId": "[format('{0}privatelink.api.azureml.ms', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMachineLearningWorkspaceSecondPrivateDnsZoneId": "[format('{0}privatelink.notebooks.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureManagedGrafanaWorkspacePrivateDnsZoneId": "[format('{0}privatelink.grafana.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMediaServicesKeyPrivateDnsZoneId": "[format('{0}privatelink.media.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMediaServicesLivePrivateDnsZoneId": "[format('{0}privatelink.media.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMediaServicesStreamPrivateDnsZoneId": "[format('{0}privatelink.media.azure.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMigratePrivateDnsZoneId": "[format('{0}privatelink.prod.migration.windowsazure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMonitorPrivateDnsZoneId1": "[format('{0}privatelink.monitor.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMonitorPrivateDnsZoneId2": "[format('{0}privatelink.oms.opinsights.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMonitorPrivateDnsZoneId3": "[format('{0}privatelink.ods.opinsights.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMonitorPrivateDnsZoneId4": "[format('{0}privatelink.agentsvc.azure-automation.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureMonitorPrivateDnsZoneId5": "[format('{0}privatelink.blob.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureRedisCachePrivateDnsZoneId": "[format('{0}privatelink.redis.cache.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureServiceBusNamespacePrivateDnsZoneId": "[format('{0}privatelink.servicebus.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSignalRPrivateDnsZoneId": "[format('{0}privatelink.service.signalr.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSiteRecoveryBackupPrivateDnsZoneId": "[format('{0}privatelink.{1}.backup.windowsazure.com', variables('varPrivateDnsZonesBaseResourceId'), variables('varSelectedGeoCode'))]",
      "azureSiteRecoveryBlobPrivateDnsZoneId": "[format('{0}privatelink.blob.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSiteRecoveryQueuePrivateDnsZoneId": "[format('{0}privatelink.queue.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageBlobPrivateDnsZoneId": "[format('{0}privatelink.blob.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageBlobSecPrivateDnsZoneId": "[format('{0}privatelink.blob.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageDFSPrivateDnsZoneId": "[format('{0}privatelink.dfs.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageDFSSecPrivateDnsZoneId": "[format('{0}privatelink.dfs.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageFilePrivateDnsZoneId": "[format('{0}privatelink.file.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageQueuePrivateDnsZoneId": "[format('{0}privatelink.queue.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageQueueSecPrivateDnsZoneId": "[format('{0}privatelink.queue.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageStaticWebPrivateDnsZoneId": "[format('{0}privatelink.web.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageStaticWebSecPrivateDnsZoneId": "[format('{0}privatelink.web.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageTablePrivateDnsZoneId": "[format('{0}privatelink.table.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureStorageTableSecondaryPrivateDnsZoneId": "[format('{0}privatelink.table.core.windows.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSynapseDevPrivateDnsZoneId": "[format('{0}privatelink.dev.azuresynapse.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSynapseSQLPrivateDnsZoneId": "[format('{0}privatelink.sql.azuresynapse.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureSynapseSQLODPrivateDnsZoneId": "[format('{0}privatelink.sql.azuresynapse.net', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureVirtualDesktopHostpoolPrivateDnsZoneId": "[format('{0}privatelink.wvd.microsoft.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureVirtualDesktopWorkspacePrivateDnsZoneId": "[format('{0}privatelink.wvd.microsoft.com', variables('varPrivateDnsZonesBaseResourceId'))]",
      "azureWebPrivateDnsZoneId": "[format('{0}privatelink.webpubsub.azure.com', variables('varPrivateDnsZonesBaseResourceId'))]"
    }
  },
  "resources": {
    "modCustomerUsageAttribution": {
      "condition": "[not(parameters('parTelemetryOptOut'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "10954439585560654905"
            }
          },
          "resources": []
        }
      }
    },
    "modCustomerUsageAttributionZtnP1": {
      "condition": "[and(not(parameters('parTelemetryOptOut')), variables('varZtnP1Trigger'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('pid-{0}-{1}', variables('varZtnP1CuaId'), uniqueString(deployment().location))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "10954439585560654905"
            }
          },
          "resources": []
        }
      }
    },
    "modPolAssiIntRootDeployMdfcConfig": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployMdfcConfig]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "emailSecurityContact": {
                "value": "[parameters('parMsDefenderForCloudEmailSecurityContact')]"
              },
              "ascExportResourceGroupLocation": {
                "value": "[parameters('parLogAnalyticsWorkSpaceAndAutomationAccountLocation')]"
              },
              "logAnalytics": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.identity.type]"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').owner]"
            ]
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMDFCConfig').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployMDEndpoints": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployMDEnpoints]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.identity.type]"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMDEndpoints').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployMDEndpointsAMA": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployMDEnpointsAma]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.identity.type]"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').rbacSecurityAdmin]"
            ]
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMDEndpointsAma').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployAzActivityLog": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployAzActivityLog]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "logAnalytics": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.identity.type]"
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]"
            ]
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployAzActivityLog').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployAscMonitoring": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployAscMonitoring]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployASCMonitoring').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployResourceDiag": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployResourceDiag').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployResourceDiag]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": "[if(equals(toLower(parameters('parLogAnalyticsWorkspaceResourceCategory')), toLower('allLogs')), createObject('value', variables('varPolicyAssignmentDeployResourceDiag').definitionId), createObject('value', variables('varPolicyAssignmentDeployResourceDiag').conditionalDefinitionId))]",
          "parPolicyAssignmentDefinitionVersion": "[if(equals(toLower(parameters('parLogAnalyticsWorkspaceResourceCategory')), toLower('allLogs')), createObject('value', variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.definitionVersion), createObject('value', variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.conditionalDefinitionVersion))]",
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployResourceDiag').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "logAnalytics": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployResourceDiag').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployResourceDiag').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployResourceDiag').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootEnforceAcsb": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceACSB').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootEnforceAcsb]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceACSB').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceACSB').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceACSB').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployMdfcOssDb": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployMdfcOssDb]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMDFCOssDb').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDeployMdfcSqlAtp": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDeployMdfcSqlAtp]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMDFCSqlAtp').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').sqlSecurityManager]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootAuditLocationMatch": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditLocationMatch').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootAuditLocationMatch]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditLocationMatch').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditLocationMatch').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditLocationMatch').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootAuditZoneResiliency": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootAuditZoneResiliency]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditZoneResiliency').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootAuditUnusedRes": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditUnusedResources').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootAuditUnusedRes]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditUnusedResources').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditUnusedResources').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditUnusedResources').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootAuditTrustedLaunch": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootAuditTrustedLaunch]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditTrustedLaunch').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDenyUnmanagedDisks": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDenyUnmanagedDisks]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentOverrides": {
            "value": "[variables('varPolicyAssignmentDenyUnmanagedDisk').libDefinition.properties.overrides]"
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIntRootDenyClassicRes": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyClassicResources').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIntRootDenyClassicRes]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').intRoot)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyClassicResources').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyClassicResources').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyClassicResources').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmArcChangeTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmArcTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmChangeTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmChangeTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmssChangeTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmssChangeTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmArcMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmArcMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleVMInsightsResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').reader]",
              "[variables('varRbacRoleDefinitionIds').connectedMachineResourceAdministrator]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleVMInsightsResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployMdfcDefSqlAma": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployMdfcDefSqlAma]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "userWorkspaceResourceId": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              },
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleMDFCSQLResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDenyDeleteUAMIAMA": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDenyDeleteUAMIAMA]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyActionDeleteUAMIAMA').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "resourceName": {
                "value": "[variables('varUserAssignedManagedIdentityResourceName')]"
              }
            }
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformDeployVmssMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformDeployVmssMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformEnforceSubnetPrivate": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformEnforceSubnetPrivate]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformEnforceGrKeyVault": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformEnforceGrKeyVault]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformEnforceAsr": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceAsr').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformEnforceAsr]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceAsr').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiPlatformEnforceAumCheckUpdates": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiPlatformEnforceAumCheckUpdates]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platform)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').connectedMachineResourceAdministrator]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiConnEnableDdosVnet": {
      "condition": "[and(not(empty(parameters('parDdosProtectionPlanId'))), not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiConnEnableDdosVnet]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformConnectivity)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "ddosPlan": {
                "value": "[parameters('parDdosProtectionPlanId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(or(not(parameters('parDdosEnabled')), parameters('parDisableAlzDefaultPolicies')), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').networkContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIdentDenyPublicIp": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyPublicIP').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIdentDenyPublicIp]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformIdentity)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyPublicIP').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyPublicIP').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyPublicIP').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIdentDenyMgmtFromInternet": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIdentDenyMgmtPortsFromInternet]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformIdentity)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIdentDenySubnetWithoutNsg": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIdentDenySubnetWithoutNsg]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformIdentity)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiIdentDeployVmBackup": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMBackup').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiIdentDeployVmBackup]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformIdentity)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "exclusionTagName": {
                "value": "[parameters('parVmBackupExclusionTagName')]"
              },
              "exclusionTagValue": {
                "value": "[parameters('parVmBackupExclusionTagValue')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMBackup').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').backupContributor]",
              "[variables('varRbacRoleDefinitionIds').vmContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiMgmtDeployLogAnalytics": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiMgmtDeployLogAnalytics]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').platformManagement)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "rgName": {
                "value": "[variables('varLogAnalyticsWorkspaceResourceGroupName')]"
              },
              "workspaceName": {
                "value": "[variables('varLogAnalyticsWorkspaceName')]"
              },
              "workspaceRegion": {
                "value": "[parameters('parLogAnalyticsWorkSpaceAndAutomationAccountLocation')]"
              },
              "dataRetention": {
                "value": "[parameters('parLogAnalyticsWorkspaceLogRetentionInDays')]"
              },
              "automationAccountName": {
                "value": "[parameters('parAutomationAccountName')]"
              },
              "automationRegion": {
                "value": "[parameters('parLogAnalyticsWorkSpaceAndAutomationAccountLocation')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployLogAnalytics').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyIpForwarding": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyIPForwarding').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenyIpForwarding]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyIPForwarding').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyIPForwarding').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyIPForwarding').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyMgmtFromInternet": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenyMgmtPortsFromInternet]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyMgmtPortsInternet').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenySubnetWithoutNsg": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenySubnetWithoutNsg]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenySubnetWithoutNsg').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmBackup": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMBackup').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmBackup]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "exclusionTagName": {
                "value": "[parameters('parVmBackupExclusionTagName')]"
              },
              "exclusionTagValue": {
                "value": "[parameters('parVmBackupExclusionTagValue')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMBackup').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMBackup').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMBackup').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').owner]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnableDdosVnet": {
      "condition": "[and(not(empty(parameters('parDdosProtectionPlanId'))), not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnableDdosVnet]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "ddosPlan": {
                "value": "[parameters('parDdosProtectionPlanId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(or(not(parameters('parDdosEnabled')), parameters('parDisableAlzDefaultPolicies')), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnableDDoSVNET').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').networkContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyStorageHttp": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyStoragehttp').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenyStorageHttp]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyStoragehttp').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyStoragehttp').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyStoragehttp').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyPrivEscalationAks": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenyPrivEscalationAks]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyPrivEscalationAKS').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyPrivContainersAks": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDenyPrivContainersAks]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyPrivContainersAKS').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnforceAksHttps": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnforceAksHttps]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceAKSHTTPS').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnforceTlsSsl": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnforceTlsSsl]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceTLSSSL').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').owner]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployAzSqlDbAuditing": {
      "condition": "[and(not(empty(parameters('parLogAnalyticsWorkspaceResourceId'))), not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.name)))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployAzSqlDbAuditing]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "logAnalyticsWorkspaceId": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployAzSqlDbAuditing').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').sqlSecurityManager]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
            "value": [
              "[variables('varLogAnalyticsWorkspaceSubscription')]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeploySqlThreat": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeploySQLThreat').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeploySqlThreat]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeploySQLThreat').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeploySQLThreat').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeploySQLThreat').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').owner]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeploySqlTde": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeploySQLTDE').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeploySqlTde]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeploySQLTDE').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeploySQLTDE').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeploySQLTDE').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').sqlDbContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmArcTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmArcTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmArcChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmChangeTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmChangeTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmssChangeTrack": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmssChangeTrack]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVmssChangeTrack').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmArcMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmArcMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployvmHybrMonitoring').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleVMInsightsResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').reader]",
              "[variables('varRbacRoleDefinitionIds').connectedMachineResourceAdministrator]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMMonitor24').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleVMInsightsResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDeployVmssMonitor": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployVmssMonitor]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployVMSSMonitor24').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleChangeTrackingResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsmDeployMdfcDefSqlAma": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsDeployMdfcDefSqlAma]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployMdfcDefSqlAma').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "userWorkspaceResourceId": {
                "value": "[parameters('parLogAnalyticsWorkspaceResourceId')]"
              },
              "dcrResourceId": {
                "value": "[parameters('parDataCollectionRuleMDFCSQLResourceId')]"
              },
              "userAssignedIdentityResourceId": {
                "value": "[parameters('parUserAssignedManagedIdentityResourceId')]"
              }
            }
          },
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').logAnalyticsContributor]",
              "[variables('varRbacRoleDefinitionIds').monitoringContributor]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]",
              "[variables('varRbacRoleDefinitionIds').reader]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
            "value": [
              "[string(variables('varManagementGroupIdsUnioned').platform)]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnforceSubnetPrivate": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnforceSubnetPrivate]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceSubnetPrivate').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnforceGrKeyVault": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnforceGrKeyVault]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceGRKeyVault').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsEnforceAsr": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceAsr').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsEnforceAsr]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceAsr').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceAsr').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceAsr').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').contributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsAumCheckUpdates": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsAumCheckUpdates]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceAumCheckUpdates').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]",
              "[variables('varRbacRoleDefinitionIds').connectedMachineResourceAdministrator]",
              "[variables('varRbacRoleDefinitionIds').managedIdentityOperator]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsAuditAppGwWaf": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiLzsAuditAppGwWaf]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').landingZones)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditAppGWWAF').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsDenyPublicEndpoints": {
      "copy": {
        "name": "modPolAssiLzsDenyPublicEndpoints",
        "count": "[length(variables('varCorpManagementGroupIdsFiltered'))]"
      },
      "condition": "[and(not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.name)), parameters('parLandingZoneChildrenMgAlzDefaultsEnable'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(contains(variables('varCorpManagementGroupIdsFiltered')[copyIndex()], 'confidential'), variables('varModDepNames').modPolAssiLzsConfidentialCorpDenyPublicEndpoints, variables('varModDepNames').modPolAssiLzsCorpDenyPublicEndpoints)]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varCorpManagementGroupIdsFiltered')[copyIndex()])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyPublicEndpoints').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiConnDeployPrivateDnsZones": {
      "copy": {
        "name": "modPolAssiConnDeployPrivateDnsZones",
        "count": "[length(variables('varCorpManagementGroupIdsFiltered'))]"
      },
      "condition": "[and(and(not(empty(variables('varPrivateDnsZonesResourceGroupSubscriptionId'))), not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.name))), parameters('parLandingZoneChildrenMgAlzDefaultsEnable'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(contains(variables('varCorpManagementGroupIdsFiltered')[copyIndex()], 'confidential'), variables('varModDepNames').modPolAssiLzsConfidentialCorpDeployPrivateDnsZones, variables('varModDepNames').modPolAssiLzsCorpDeployPrivateDnsZones)]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varCorpManagementGroupIdsFiltered')[copyIndex()])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": {
            "value": {
              "azureAcrPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAcrPrivateDnsZoneId]"
              },
              "azureAppPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAppPrivateDnsZoneId]"
              },
              "azureAppServicesPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAppServicesPrivateDnsZoneId]"
              },
              "azureArcGuestconfigurationPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureArcGuestconfigurationPrivateDnsZoneId]"
              },
              "azureArcHybridResourceProviderPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureArcHybridResourceProviderPrivateDnsZoneId]"
              },
              "azureArcKubernetesConfigurationPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureArcKubernetesConfigurationPrivateDnsZoneId]"
              },
              "azureAsrPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAsrPrivateDnsZoneId]"
              },
              "azureAutomationDSCHybridPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAutomationDSCHybridPrivateDnsZoneId]"
              },
              "azureAutomationWebhookPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureAutomationWebhookPrivateDnsZoneId]"
              },
              "azureBatchPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureBatchPrivateDnsZoneId]"
              },
              "azureBotServicePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureBotServicePrivateDnsZoneId]"
              },
              "azureCognitiveSearchPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCognitiveSearchPrivateDnsZoneId]"
              },
              "azureCognitiveServicesPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCognitiveServicesPrivateDnsZoneId]"
              },
              "azureCosmosCassandraPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCosmosCassandraPrivateDnsZoneId]"
              },
              "azureCosmosGremlinPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCosmosGremlinPrivateDnsZoneId]"
              },
              "azureCosmosMongoPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCosmosMongoPrivateDnsZoneId]"
              },
              "azureCosmosSQLPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCosmosSQLPrivateDnsZoneId]"
              },
              "azureCosmosTablePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureCosmosTablePrivateDnsZoneId]"
              },
              "azureDataFactoryPortalPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureDataFactoryPortalPrivateDnsZoneId]"
              },
              "azureDataFactoryPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureDataFactoryPrivateDnsZoneId]"
              },
              "azureDatabricksPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureDatabricksPrivateDnsZoneId]"
              },
              "azureDiskAccessPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureDiskAccessPrivateDnsZoneId]"
              },
              "azureEventGridDomainsPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureEventGridDomainsPrivateDnsZoneId]"
              },
              "azureEventGridTopicsPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureEventGridTopicsPrivateDnsZoneId]"
              },
              "azureEventHubNamespacePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureEventHubNamespacePrivateDnsZoneId]"
              },
              "azureFilePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureFilePrivateDnsZoneId]"
              },
              "azureHDInsightPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureHDInsightPrivateDnsZoneId]"
              },
              "azureIotCentralPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureIotCentralPrivateDnsZoneId]"
              },
              "azureIotDeviceupdatePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureIotDeviceupdatePrivateDnsZoneId]"
              },
              "azureIotHubsPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureIotHubsPrivateDnsZoneId]"
              },
              "azureIotPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureIotPrivateDnsZoneId]"
              },
              "azureKeyVaultPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureKeyVaultPrivateDnsZoneId]"
              },
              "azureMachineLearningWorkspacePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMachineLearningWorkspacePrivateDnsZoneId]"
              },
              "azureMachineLearningWorkspaceSecondPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMachineLearningWorkspaceSecondPrivateDnsZoneId]"
              },
              "azureManagedGrafanaWorkspacePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureManagedGrafanaWorkspacePrivateDnsZoneId]"
              },
              "azureMediaServicesKeyPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMediaServicesKeyPrivateDnsZoneId]"
              },
              "azureMediaServicesLivePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMediaServicesLivePrivateDnsZoneId]"
              },
              "azureMediaServicesStreamPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMediaServicesStreamPrivateDnsZoneId]"
              },
              "azureMigratePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMigratePrivateDnsZoneId]"
              },
              "azureMonitorPrivateDnsZoneId1": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMonitorPrivateDnsZoneId1]"
              },
              "azureMonitorPrivateDnsZoneId2": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMonitorPrivateDnsZoneId2]"
              },
              "azureMonitorPrivateDnsZoneId3": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMonitorPrivateDnsZoneId3]"
              },
              "azureMonitorPrivateDnsZoneId4": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMonitorPrivateDnsZoneId4]"
              },
              "azureMonitorPrivateDnsZoneId5": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureMonitorPrivateDnsZoneId5]"
              },
              "azureRedisCachePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureRedisCachePrivateDnsZoneId]"
              },
              "azureServiceBusNamespacePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureServiceBusNamespacePrivateDnsZoneId]"
              },
              "azureSignalRPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSignalRPrivateDnsZoneId]"
              },
              "azureSiteRecoveryBackupPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSiteRecoveryBackupPrivateDnsZoneId]"
              },
              "azureSiteRecoveryBlobPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSiteRecoveryBlobPrivateDnsZoneId]"
              },
              "azureSiteRecoveryQueuePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSiteRecoveryQueuePrivateDnsZoneId]"
              },
              "azureStorageBlobPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageBlobPrivateDnsZoneId]"
              },
              "azureStorageBlobSecPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageBlobSecPrivateDnsZoneId]"
              },
              "azureStorageDFSPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageDFSPrivateDnsZoneId]"
              },
              "azureStorageDFSSecPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageDFSSecPrivateDnsZoneId]"
              },
              "azureStorageFilePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageFilePrivateDnsZoneId]"
              },
              "azureStorageQueuePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageQueuePrivateDnsZoneId]"
              },
              "azureStorageQueueSecPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageQueueSecPrivateDnsZoneId]"
              },
              "azureStorageStaticWebPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageStaticWebPrivateDnsZoneId]"
              },
              "azureStorageStaticWebSecPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageStaticWebSecPrivateDnsZoneId]"
              },
              "azureStorageTablePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageTablePrivateDnsZoneId]"
              },
              "azureStorageTableSecondaryPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureStorageTableSecondaryPrivateDnsZoneId]"
              },
              "azureSynapseDevPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSynapseDevPrivateDnsZoneId]"
              },
              "azureSynapseSQLPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSynapseSQLPrivateDnsZoneId]"
              },
              "azureSynapseSQLODPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureSynapseSQLODPrivateDnsZoneId]"
              },
              "azureVirtualDesktopHostpoolPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureVirtualDesktopHostpoolPrivateDnsZoneId]"
              },
              "azureVirtualDesktopWorkspacePrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureVirtualDesktopWorkspacePrivateDnsZoneId]"
              },
              "azureWebPrivateDnsZoneId": {
                "value": "[variables('varPrivateDnsZonesFinalResourceIds').azureWebPrivateDnsZoneId]"
              }
            }
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDeployPrivateDNSZones').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').networkContributor]"
            ]
          },
          "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
            "value": [
              "[variables('varPrivateDnsZonesResourceGroupSubscriptionId')]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsCorpDenyPipOnNic": {
      "copy": {
        "name": "modPolAssiLzsCorpDenyPipOnNic",
        "count": "[length(variables('varCorpManagementGroupIdsFiltered'))]"
      },
      "condition": "[and(not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.name)), parameters('parLandingZoneChildrenMgAlzDefaultsEnable'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(contains(variables('varCorpManagementGroupIdsFiltered')[copyIndex()], 'confidential'), variables('varModDepNames').modPolAssiLzsConfidentialCorpDenyPipOnNic, variables('varModDepNames').modPolAssiLzsCorpDenyPipOnNic)]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varCorpManagementGroupIdsFiltered')[copyIndex()])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyPublicIPOnNIC').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsCorpDenyHybridNet": {
      "copy": {
        "name": "modPolAssiLzsCorpDenyHybridNet",
        "count": "[length(variables('varCorpManagementGroupIdsFiltered'))]"
      },
      "condition": "[and(not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.name)), parameters('parLandingZoneChildrenMgAlzDefaultsEnable'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(contains(variables('varCorpManagementGroupIdsFiltered')[copyIndex()], 'confidential'), variables('varModDepNames').modPolAssiLzsConfidentialCorpDenyHybridNet, variables('varModDepNames').modPolAssiLzsCorpDenyHybridNet)]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varCorpManagementGroupIdsFiltered')[copyIndex()])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').definitionId]"
          },
          "parPolicyAssignmentDefinitionVersion": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.properties.definitionVersion]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentDenyHybridNetworking').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiLzsCorpAuditPeDnsZones": {
      "copy": {
        "name": "modPolAssiLzsCorpAuditPeDnsZones",
        "count": "[length(variables('varCorpManagementGroupIdsFiltered'))]"
      },
      "condition": "[and(not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.name)), parameters('parLandingZoneChildrenMgAlzDefaultsEnable'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[if(contains(variables('varCorpManagementGroupIdsFiltered')[copyIndex()], 'confidential'), variables('varModDepNames').modPolAssiLzsConfidentialCorpAuditPeDnsZones, variables('varModDepNames').modPolAssiLzsCorpAuditPeDnsZones)]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varCorpManagementGroupIdsFiltered')[copyIndex()])]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentParameterOverrides": "[if(empty(parameters('parPrivateDnsZonesNamesToAuditInCorp')), createObject('value', createObject()), createObject('value', createObject('privateLinkDnsZones', createObject('value', parameters('parPrivateDnsZonesNamesToAuditInCorp')))))]",
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentAuditPeDnsZones').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiDecommEnforceAlz": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiDecommEnforceAlz]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').decommissioned)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceALZDecomm').libDefinition.properties.enforcementMode))]",
          "parPolicyAssignmentIdentityRoleDefinitionIds": {
            "value": [
              "[variables('varRbacRoleDefinitionIds').vmContributor]"
            ]
          },
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    },
    "modPolAssiSandboxEnforceAlz": {
      "condition": "[not(contains(parameters('parExcludedPolicyAssignments'), variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.name))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[variables('varModDepNames').modPolAssiSandboxEnforceAlz]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', variables('varManagementGroupIdsUnioned').sandbox)]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "parPolicyAssignmentDefinitionId": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').definitionId]"
          },
          "parPolicyAssignmentName": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.name]"
          },
          "parPolicyAssignmentDisplayName": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.properties.displayName]"
          },
          "parPolicyAssignmentDescription": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.properties.description]"
          },
          "parPolicyAssignmentParameters": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.properties.parameters]"
          },
          "parPolicyAssignmentIdentityType": {
            "value": "[variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.identity.type]"
          },
          "parPolicyAssignmentEnforcementMode": "[if(or(parameters('parDisableAlzDefaultPolicies'), contains(parameters('parPolicyAssignmentsToDisableEnforcement'), variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.name)), createObject('value', 'DoNotEnforce'), createObject('value', variables('varPolicyAssignmentEnforceALZSandbox').libDefinition.properties.enforcementMode))]",
          "parTelemetryOptOut": {
            "value": "[parameters('parTelemetryOptOut')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "languageVersion": "2.0",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.37.4.10188",
              "templateHash": "9120034368415495505"
            },
            "name": "ALZ Bicep - Management Group Policy Assignments",
            "description": "Assign policies to management groups"
          },
          "definitions": {
            "nonComplianceMessageType": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "metadata": {
                      "description": "Non-compliance message."
                    }
                  },
                  "policyDefinitionReferenceId": {
                    "type": "string",
                    "metadata": {
                      "description": "Policy definition reference ID."
                    }
                  }
                }
              }
            }
          },
          "parameters": {
            "parPolicyAssignmentName": {
              "type": "string",
              "minLength": 1,
              "maxLength": 24,
              "metadata": {
                "description": "Policy assignment name."
              }
            },
            "parPolicyAssignmentDisplayName": {
              "type": "string",
              "metadata": {
                "description": "Display name."
              }
            },
            "parPolicyAssignmentDescription": {
              "type": "string",
              "metadata": {
                "description": "Assignment description."
              }
            },
            "parPolicyAssignmentDefinitionId": {
              "type": "string",
              "metadata": {
                "description": "Policy definition ID."
              }
            },
            "parPolicyAssignmentParameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Policy parameters."
              }
            },
            "parPolicyAssignmentParameterOverrides": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Parameter overrides."
              }
            },
            "parPolicyAssignmentNonComplianceMessages": {
              "$ref": "#/definitions/nonComplianceMessageType",
              "defaultValue": [],
              "metadata": {
                "description": "Non-compliance messages."
              }
            },
            "parPolicyAssignmentNotScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Excluded scope IDs."
              }
            },
            "parPolicyAssignmentEnforcementMode": {
              "type": "string",
              "defaultValue": "Default",
              "allowedValues": [
                "Default",
                "DoNotEnforce"
              ],
              "metadata": {
                "description": "Enforcement mode."
              }
            },
            "parPolicyAssignmentOverrides": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required overrides."
              }
            },
            "parPolicyAssignmentResourceSelectors": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required resource selectors."
              }
            },
            "parPolicyAssignmentDefinitionVersion": {
              "type": "string",
              "nullable": true,
              "metadata": {
                "description": "Policy definition version."
              }
            },
            "parPolicyAssignmentIdentityType": {
              "type": "string",
              "defaultValue": "None",
              "allowedValues": [
                "None",
                "SystemAssigned"
              ],
              "metadata": {
                "description": "Identity type."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Additional MGs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsSubs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscription IDs for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleAssignmentsResourceGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Subscriptions & resource groups for role assignments."
              }
            },
            "parPolicyAssignmentIdentityRoleDefinitionIds": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "RBAC role definition IDs."
              }
            },
            "parTelemetryOptOut": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Opt-out of telemetry."
              }
            }
          },
          "variables": {
            "varPolicyAssignmentParametersMerged": "[union(parameters('parPolicyAssignmentParameters'), parameters('parPolicyAssignmentParameterOverrides'))]",
            "varPolicyIdentity": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), 'SystemAssigned', 'None')]",
            "varPolicyAssignmentIdentityRoleAssignmentsMgsConverged": "[if(equals(parameters('parPolicyAssignmentIdentityType'), 'SystemAssigned'), union(parameters('parPolicyAssignmentIdentityRoleAssignmentsAdditionalMgs'), array(managementGroup().name)), createArray())]",
            "varCuaid": "78001e36-9738-429c-a343-45cc84e8a527"
          },
          "resources": {
            "resPolicyAssignment": {
              "type": "Microsoft.Authorization/policyAssignments",
              "apiVersion": "2025-01-01",
              "name": "[parameters('parPolicyAssignmentName')]",
              "properties": {
                "displayName": "[parameters('parPolicyAssignmentDisplayName')]",
                "description": "[parameters('parPolicyAssignmentDescription')]",
                "policyDefinitionId": "[parameters('parPolicyAssignmentDefinitionId')]",
                "parameters": "[variables('varPolicyAssignmentParametersMerged')]",
                "nonComplianceMessages": "[parameters('parPolicyAssignmentNonComplianceMessages')]",
                "notScopes": "[parameters('parPolicyAssignmentNotScopes')]",
                "enforcementMode": "[parameters('parPolicyAssignmentEnforcementMode')]",
                "overrides": "[parameters('parPolicyAssignmentOverrides')]",
                "resourceSelectors": "[parameters('parPolicyAssignmentResourceSelectors')]",
                "definitionVersion": "[parameters('parPolicyAssignmentDefinitionVersion')]"
              },
              "identity": {
                "type": "[variables('varPolicyIdentity')]"
              },
              "location": "[deployment().location]"
            },
            "modPolicyIdentityRoleAssignmentMgsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentMgsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-mg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parManagementGroupIds": {
                    "value": "[variables('varPolicyAssignmentIdentityRoleAssignmentsMgsConverged')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "11281258838235260183"
                    },
                    "name": "ALZ Bicep - Role Assignment to Management Groups",
                    "description": "Module to assign a role to multiple Management Groups"
                  },
                  "parameters": {
                    "parManagementGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of management group scopes (e.g., [alz-platform-connectivity, alz-platform-identity])."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parManagementGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parManagementGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('parManagementGroupIds')[copyIndex()])]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parManagementGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14040880312477770197"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Management Group",
                            "description": "Module to assign a role to a Management Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(managementGroup().name, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the group, service principal, or managed identity."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Must be \"2.0\"."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[tenantResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parRoleAssignmentNameGuid')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10954439585560654905"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentSubsMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentSubsMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-sub-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parSubscriptionIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsSubs')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "17753525482786304844"
                    },
                    "name": "ALZ Bicep - Role Assignment to Subscriptions",
                    "description": "Module to assign a role to multiple Subscriptions"
                  },
                  "parameters": {
                    "parSubscriptionIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of subscription IDs (e.g., 4f9f8765-911a-4a6d-af60-4bc0473268c0)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition ID (e.g., Reader Role ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: \"Group\" (Security Group) or \"ServicePrincipal\" (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of the group, service principal, or managed identity."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Must be \"2.0\"."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parSubscriptionIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parSubscriptionIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[parameters('parSubscriptionIds')[copyIndex()]]",
                      "location": "[deployment().location]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parSubscriptionIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "14991426651975207461"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Subscription",
                            "description": "Assigns a role to a subscription."
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(subscription().subscriptionId, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for role assignment."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition ID (e.g., Reader: acdd72a7-3385-48ef-bd42-f606fba81ae7)."
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: \"Group\" or \"ServicePrincipal\"."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of the assignee."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Opt out of telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator)."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role condition version (must be \"2.0\")."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(subscription().subscriptionId, parameters('parAssigneeObjectId')))]",
                              "location": "[deployment().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modPolicyIdentityRoleAssignmentResourceGroupMany": {
              "copy": {
                "name": "modPolicyIdentityRoleAssignmentResourceGroupMany",
                "count": "[length(parameters('parPolicyAssignmentIdentityRoleDefinitionIds'))]"
              },
              "condition": "[and(and(equals(variables('varPolicyIdentity'), 'SystemAssigned'), not(empty(parameters('parPolicyAssignmentIdentityRoleDefinitionIds')))), not(empty(parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups'))))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('rbac-assign-rg-policy-{0}-{1}', parameters('parPolicyAssignmentName'), uniqueString(parameters('parPolicyAssignmentName'), parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "parResourceGroupIds": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleAssignmentsResourceGroups')]"
                  },
                  "parAssigneeObjectId": {
                    "value": "[reference('resPolicyAssignment', '2025-01-01', 'full').identity.principalId]"
                  },
                  "parAssigneePrincipalType": {
                    "value": "ServicePrincipal"
                  },
                  "parRoleDefinitionId": {
                    "value": "[parameters('parPolicyAssignmentIdentityRoleDefinitionIds')[copyIndex()]]"
                  },
                  "parTelemetryOptOut": {
                    "value": "[parameters('parTelemetryOptOut')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "6565363110443570967"
                    },
                    "name": "ALZ Bicep - Role Assignment to Resource Groups",
                    "description": "Module to assign a role to multiple Resource Groups"
                  },
                  "parameters": {
                    "parResourceGroupIds": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "List of Resource Groups for role assignment in the format subscriptionId/resourceGroupName (e.g., a1fe8a74-e0ac-478b-97ea-24a27958961b/rg01)."
                      }
                    },
                    "parRoleDefinitionId": {
                      "type": "string",
                      "metadata": {
                        "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                      }
                    },
                    "parAssigneePrincipalType": {
                      "type": "string",
                      "allowedValues": [
                        "Group",
                        "ServicePrincipal"
                      ],
                      "metadata": {
                        "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                      }
                    },
                    "parAssigneeObjectId": {
                      "type": "string",
                      "metadata": {
                        "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                      }
                    },
                    "parTelemetryOptOut": {
                      "type": "bool",
                      "defaultValue": false,
                      "metadata": {
                        "description": "Set to true to opt out of deployment telemetry."
                      }
                    },
                    "parRoleAssignmentCondition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                      }
                    },
                    "parRoleAssignmentConditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "metadata": {
                        "description": "Role assignment condition version. Only value accepted is '2.0'."
                      }
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "modRoleAssignment",
                        "count": "[length(parameters('parResourceGroupIds'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2022-09-01",
                      "name": "[format('rbac-assign-{0}', uniqueString(parameters('parResourceGroupIds')[copyIndex()], parameters('parAssigneeObjectId'), parameters('parRoleDefinitionId')))]",
                      "subscriptionId": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[0]]",
                      "resourceGroup": "[split(parameters('parResourceGroupIds')[copyIndex()], '/')[1]]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "parRoleAssignmentNameGuid": {
                            "value": "[guid(parameters('parResourceGroupIds')[copyIndex()], parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]"
                          },
                          "parAssigneeObjectId": {
                            "value": "[parameters('parAssigneeObjectId')]"
                          },
                          "parAssigneePrincipalType": {
                            "value": "[parameters('parAssigneePrincipalType')]"
                          },
                          "parRoleDefinitionId": {
                            "value": "[parameters('parRoleDefinitionId')]"
                          },
                          "parTelemetryOptOut": {
                            "value": "[parameters('parTelemetryOptOut')]"
                          },
                          "parRoleAssignmentCondition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentCondition')), createObject('value', null()))]",
                          "parRoleAssignmentConditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), createObject('value', parameters('parRoleAssignmentConditionVersion')), createObject('value', null()))]"
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.37.4.10188",
                              "templateHash": "16405423908471351656"
                            },
                            "name": "ALZ Bicep - Role Assignment to a Resource Group",
                            "description": "Module to assign a role to a Resource Group"
                          },
                          "parameters": {
                            "parRoleAssignmentNameGuid": {
                              "type": "string",
                              "defaultValue": "[guid(resourceGroup().id, parameters('parRoleDefinitionId'), parameters('parAssigneeObjectId'))]",
                              "metadata": {
                                "description": "GUID for the role assignment name."
                              }
                            },
                            "parRoleDefinitionId": {
                              "type": "string",
                              "metadata": {
                                "description": "Role Definition Id (e.g., Reader Role Definition ID: acdd72a7-3385-48ef-bd42-f606fba81ae7)"
                              }
                            },
                            "parAssigneePrincipalType": {
                              "type": "string",
                              "allowedValues": [
                                "Group",
                                "ServicePrincipal"
                              ],
                              "metadata": {
                                "description": "Principal type: 'Group' (Security Group) or 'ServicePrincipal' (Service Principal/Managed Identity)."
                              }
                            },
                            "parAssigneeObjectId": {
                              "type": "string",
                              "metadata": {
                                "description": "Object ID of groups, service principals, or managed identities (use principal ID for managed identities)."
                              }
                            },
                            "parTelemetryOptOut": {
                              "type": "bool",
                              "defaultValue": false,
                              "metadata": {
                                "description": "Set to true to opt out of deployment telemetry."
                              }
                            },
                            "parRoleAssignmentCondition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Role assignment condition (e.g., Owner, User Access Administrator). Only roles with `write` or `delete` permissions can have a condition."
                              }
                            },
                            "parRoleAssignmentConditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "metadata": {
                                "description": "Role assignment condition version. Only value accepted is '2.0'."
                              }
                            }
                          },
                          "variables": {
                            "varCuaid": "59c2ac61-cd36-413b-b999-86a3e0d958fb"
                          },
                          "resources": [
                            {
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "name": "[parameters('parRoleAssignmentNameGuid')]",
                              "properties": {
                                "roleDefinitionId": "[resourceId('Microsoft.Authorization/roleDefinitions', parameters('parRoleDefinitionId'))]",
                                "principalId": "[parameters('parAssigneeObjectId')]",
                                "principalType": "[parameters('parAssigneePrincipalType')]",
                                "condition": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentCondition'), null())]",
                                "conditionVersion": "[if(not(empty(parameters('parRoleAssignmentCondition'))), parameters('parRoleAssignmentConditionVersion'), null())]"
                              }
                            },
                            {
                              "condition": "[not(parameters('parTelemetryOptOut'))]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2022-09-01",
                              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(resourceGroup().id, parameters('parAssigneeObjectId')))]",
                              "subscriptionId": "[subscription().subscriptionId]",
                              "location": "[resourceGroup().location]",
                              "properties": {
                                "expressionEvaluationOptions": {
                                  "scope": "inner"
                                },
                                "mode": "Incremental",
                                "parameters": {},
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "metadata": {
                                    "_generator": {
                                      "name": "bicep",
                                      "version": "0.37.4.10188",
                                      "templateHash": "10980074538208966246"
                                    }
                                  },
                                  "resources": []
                                }
                              }
                            }
                          ]
                        }
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "resPolicyAssignment"
              ]
            },
            "modCustomerUsageAttribution": {
              "condition": "[not(parameters('parTelemetryOptOut'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2022-09-01",
              "name": "[format('pid-{0}-{1}', variables('varCuaid'), uniqueString(deployment().location, parameters('parPolicyAssignmentName')))]",
              "location": "[deployment().location]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.37.4.10188",
                      "templateHash": "10954439585560654905"
                    }
                  },
                  "resources": []
                }
              }
            }
          },
          "outputs": {
            "outPolicyAssignmentId": {
              "type": "string",
              "value": "[extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyAssignments', parameters('parPolicyAssignmentName'))]"
            }
          }
        }
      }
    }
  }
}